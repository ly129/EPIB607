%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Venn)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 21:11:00 09/15/07
%%For: (Administrator)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 792 612
%%HiResBoundingBox: 0.0 0.0 792.0 612.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial-BoldMT
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N10 (Arial-BoldMT) -1 TZ
%%IncludeResource ArialMT
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N11 (ArialMT) -1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3682 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2007-09-15T21:11-04:00</xap:CreateDate>
         <xap:ModifyDate>2007-09-15T21:11-04:00</xap:ModifyDate>
         <xap:MetadataDate>2007-09-15T21:11-04:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:87B81EB0F163DC1192BE8D7F12B8DDC2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:87B81EB0F163DC1192BE8D7F12B8DDC2</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:de6d690b-c952-4bce-96a9-d74cb31886fa</stRef:instanceID>
            <stRef:documentID>uuid:76930574-6bfa-4f9a-844c-0d91d60d58a9</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microsoft PowerPoint - Venn</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Administrator</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 792.0 612.0 rectclip
[ 0 -1 1 0 0 612 ] concat
/N12 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

q
0.0 0.0 m
612.0 0.0 l
612.0 792.0 l
0.0 792.0 l
h
W
n
n
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E1 exch /ColorSpace defineRes

cs 1.0 1.0 1.0 sc
36.000000 36.000000 540.000000 720.000000 rectfill

q
0.0 279.0 -499.02 0.0 544.14 50.1 cm
q
n
0.0 0.0 1.0 1.0 re
/E1 /ColorSpace findRes cs 
<<
/ImageType 1
/Width 309
/Height 598
/ImageMatrix [309.0 0.0 0.0 -598.0 0.0 598.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\B#Rh"G$kWjS$P=*a$k*X](_[Pt',)3!
&el#o'G;2u)]Tn=)]'bF-RU/b2)@$E2*3l]4$,Mc4$,M)%1<OQ%LisZ%M0<a%h99f
&.oKc'HIl%'bh?&,oRR9(Ddu9+<qpK*[;dU-m^/f-o*P31,:pQ4$,Mc4$,Mcs1eUH
#Qe$-2$3k'!!3`5!tbS6_uW(&!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG:2$![Y&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5s4RG]!s&B'&H`UF5618mPGUoD9cBp$,qI(j1l((R8liU$
!%%,,AL/kbPk_$W8p$<%8LOm38lAOESe@*t,q\X[Pjjf,9.*BlOmkq87Yr34^+%,p
9-q`&d#s\<07oDp8eP&C;l#X'V'Rq?8L1.Xe)Zr.`?^$+8P<f]P_7+l#DA>IIT&W^
8P:=q#pc>mSeD6kUln:q0A_&Pb![+=,qFY3#t1ScBb6^H_E]BC6?qj]8mfC\.MKkE
1lmfFn4?8tG>=WlTuVhNWCg*D\>SuFFHjXi&g\)i$@bHa;Gnr9F[br<9N]]q,pSro
cAGh1fe&d!,r(u(kEP(``C:."P*bqhRX>_O,q]g`Ua2+he0L[!Uf(+4E0PUCP*D:>
!?VHT8P@.mO`%.]Pa&OA8m2qI&<`?BQTQSM4=$c8Uln:uRte5D`em4k;+XAO3aWSc
TUlc&b]ZQN9GFo%a\E_iEIb0$iFH5j'fj2+Lk%[#,rJ,/4eO6MEQZt8U"XY'c(hde
pQ^&bQ%rKCN=U,!lJj:C:;L7T3m;6N2DDbe,I=9/]]iZs"jd>:.Hu,D[r$Au&_Mh.
r^C%plH`O]p]e*HX+[3%bHcs8%uZ'P7?=TpRf8P43*.'H41`b"j_OMFO-T_F3jST\
_c_4oSZ2>V,@?o(5N[DfFgEEPr/QV\E[]oLGDI7\Oj;s5PG3Q[1^K)gkGmm@d!C+L
0']sk4lQl"p0mS3j?KbC!9=?J$%#QG**uV:W\l#CH1ItJo_)-XWlGbU!Xp]Uq`_16
dTb8&[#P,rK#[)d>qX>kf1#)3jGff<T06")O=CkHc5eCTd`9r$P2Hi!V^N>>AQ2Fe
8F^SkDY2sXR$E,cU#E6<'<![f^D4ZBgVe'"G_+Bf#Eg3iF?XD/MWl_4D43V]`-B:Z
S\6A:)/QO@aPdUOWc:Zt;(N`u>'BOrg*X9:!7^]c:a+7kgiAnj6.$9Y$)F<k-7oJE
,qoS?5:OcH3bk@ejWuZU8'*410e"PC7Z%$U8P;GsQRVT!9LgR23Y^;j?PJa!,?0lj
6ma)j;NaTsPfRhO.S]"Zd%mM%^m*V'J<H7T#l%L>)7KB@1q:i,8HCA)J$`cc6$TN?
4fid]5gW1@++R\JdJ=)Dkr>cF(:KOLo>1m+k":s]4tTC[84DJu?dtU4D/l5^_u_$(
N?8/34E%57J.>;lOo>ii!-q.A1U]#lmr2iG9:k/D"j^b.D&-Ar3YjNXnhhJaHQ2+F
(udF^B-B>qC&5*_lP&LN"'sKf^`S[s7oK2mdi0'09*kOt#>bnSi3WF`k20P2LXbX8
m\[=og#t1]Q[i7!IoSN>(=LE(Fe&;p9AMf7U2U-I,jsc$p&>!thd.s1_m:]U8/6HB
h8Jga(tnTV1Ks+bl0LNMK&AlX'j']i@@p\K$^fMN*=WGX!&lO?`0f.^AKV&7Nu@rt
0Y3iNCU<km<ni`2%XedJM"%$O]&0HW2;ch<19Wl[M-Vajl$t??#lp]:_.V8iX,ItV
]$o\NNcb6CTDI76Dl!$se$$Zad2$7MQF%9.k",#Jqh/b;/m%B$R!8aWb%VrL"=,!n
PL0.^5n1Z'$'?bB$K%mk=7;8a:8#\h2ei0+e,YTZjO<lOe:/15706e6,O,fiHaRHI
n_MjIpB^Zj/A(o^`T?bc\mJ?^@ofno,N0ehVoqK=ngG=Wd3</mcDOHDk]ShS:6o$e
bVn#oCQF/D_@:p'!oIeUQ[^NH]lkLX)P-g-L"_i!f_L-#^Zsr';X*u#af`(Zf$.CF
*!Xgdar0+?Z4*0aE"%#\S1FbFC_`4n93n*:DJ[7S4>gDnBDAs<T)OqBqJ7-,h+-<]
>lI5[lhqVBjCVj?lZ@nb8`%lXFO`)'+DA8U'Mmu#=o=KEW*duTY?'p!*\19mr%*I/
ZdX+%O3l$5f[P`_KaHaqeTQZ.h-8TA_@N)ig#[=ai6ce%Vh&"(4XS>4fC!RL+V>m'
#VJDO*,;36*/.ts3Mm'L/I.MW#j"7$,/Q2W.&*S8UT0RCU0s.MmZMT(6:t4n:Wd@(
LFFZD.7U9^V;'3@4JXu.o;YDengUpo%T.!S@3n',e8MBi]lu7XAqun(HA8LH&GI8\
T'um"kqC*Ran8!0AE-thrfpV*RqL/b8^^,f+VXcS:g;C)0-URd#(tsDZ2@VjY8>l'
(qgiC6i)e84:^_?pa_F?!":YABr0;!;YoPE[,r$YdOQS$Wq>s(3<8gKY-/3<%gITG
M,S,i*CG*9AF`>>(*tqBP[[JAVM9g_UW^EuP[FLgjVpWhb]]!PeO@aQkIEu)7#jTj
Lso;u;$@-a5.EOi>Ng!rI9<,/?!2*Ua*#T(EtQpu+Zba8nI)BBPM_V9/#"^'4t8f"
'DSIJne2e17ha]/6I#c\BKSCY/bT(Ie$-sB10T/Ol3g9'1-?@1p%bBV4Tp4O6V8SG
4UkqjfR"CCnc^cLq=[\+!7P;#XhXNY6)SpkE0+!2)DplD)YkXnDX#n.nPAD4H%Zo.
2>-pAhcF&Jimo3o[^p]9^r;jo6Gd7/X#'(lAGo`Bp((U0<i8Q04YmZC1tSpkM%lg<
ck4TG`^Z+T*K^Vu@Pg_oJ4D%dY+.,NohVB+L,dpYa2nG:O\jciJ!<$t-`_Z#lebdC
G"K&O@5NMt%7gWc87&4$I&1?OD6,hahKq7(Qp6IETc%NF7V:O<`Tju-&BdYFa)L)2
:X*3%)N`q>W.iiFmYTBgQdr/EF"uD=k^X]W3$/\ukBa&V%^4;-rg<;JL,CeLq8SIK
'jc9q$Oj;]%Y`$H_5d<j*S?(.Q%O2t]s?&]_h,=:o4Z3,#rLEG3i?ZLHo4E85nN!"
_j(8^M5&*Wm.,fA0uAc`r)VBu8J#aY*(bK;O"o_#]:S9&Ji$Y",(^4<.8t0g+n1@*
jQ`+cns%9h=YbC=,c0[!;G<6GA0ONcO!tQ,V_A`^&1"#Paq?:=g^$JIVuHaSlUg?O
P`qqf!oNAKD^Y4]YLrN=>DGS;!UO4o!.)oi!#:P9O&9hJX$:i1n>-'aN%DO,5m-OV
@C>ka+.0`WAgE0^?)PH#BT@<Da,!:p6k+:jmS+Ab;EFBC8aM]kjSle)1O:ji0E*,;
A:ZPsU?+SOR(oGgj!4>QeWD,uOIa`AL_)Di8jj4]m%qXRT`m"+_&kPZI=?#)(:\><
QquSM;DfA9>lOfUYs2;@4r,j<nOOZu2g2G7j&/AOVJH-lO12\*:=fRbpsR([!(8=Z
,csa.E(n-%'-ue>&kP3MrS[nr"7)dphcB<)e20"Co7F['2<`[?rWSbgQ%,q=rl4P"
D68ljJiD6?4U1u]oNI6TUNd()KS^T\_K^\^&.<%>&k+N9M3"+MqSpDOKq8dLcuJrK
Rsi)4`DPr\,GO?XpSIES,bR#1rE1^rea*CqduVGL""f*],con'Aq$mjT#%Q4IqYrc
%=(FF?!IlSohVIXJa.(K5%+4I($K<+6b;5t.I)<cnVu&N?VrOa6U<;Cq"XY<=*o(N
]i+-$3u=i)^DA6$qWnftk+<7D<-^3T%9Xj9LW]1//BW75$?hR#H.#3)%%`X9W:_Yn
F+BU0a2r%,i*5l(W]LRJ^E3>hZ8qpbE]\f-j:NI[8jL2@32m:2;BnrXD]RBPapg9i
J9uQ[QrRD?WZ^$F@&4mleMu&&V2.cN&kl2$];1T].?NXQ\^`Cq41$FcA6Sg!6A.tV
W@@I(nQ=i:obRQ--DFPD'S#.sQ@(+=r"_6dXafZIbT5tW57lh_0a?P*LQW/YTV'&+
a7?H-EqSiV&^QnN%lAeT-R*Y$BNnGdNDBi]kG!GMP+G>4k+At#fOTR/(KWYY`H&_#
KN$?\L.d"Gl68JW+<kt9kfA>H8q-D`8ir]B)!ng5!3[SqXlKut0`ESrO2YN*Fp.bI
asW9SJ*A5@];*fuoUI[41pd1W/#!:S\u!f*G=TLm82RW$)cber,^/O.V2lNA*3#&_
ntR,I,_mK-E!P[bGPkSC!3-BU<b2/9^l;-c"T6c`Za;feB*56b:Y^Zs6/hhD<q(q+
1-X\q)^t(<7.\97+;H-DM;?i!."F/n.U?2h\mAlBH6;qt\a`[GSSipNb@#<uFYAL[
7YrO2kP\+:^9-Ag!'#JV.q.-P(+7U`:Y![/i;3c7jgO,2[7dNW`XJ(j!$q,n!9e]*
+El],MB6R!VbC]P7)$Z!E\ThfQOZ7cgcji?iRi(eY22_]I,hg1gmWlZ[^_Fqg^*I&
/'N;i,H&5NCL+(Cq$tQ^0c^:-`-N2c>@@*'[P\OG-c\e]%g.p%qU#1;NkrN4/_U1^
.^XA04/6cF0]>+#EaSrh'M:sU1.k^_8L0PAEh16Md%03!m#m[a,$3'GEi3'i,cA9S
!#=o(Wo^_%W<@U=<p5j!N*-)[8WHU)\_lpf8F+ie`uWY.Ep0el^Z-+Irq8I(d44QK
P^+t+jtC%*'`F17,`9R84s`D+dZ66"JdQd!nUm\[&b*nWl<1/+I#$cf\+mfPdrA/l
P2F?lMRBRkXL5>-"AZd=(\7)l"ij>I_.7\\XW9'j%@0*-a?N.OoeY`W/n6E2rFG4T
4oYMgYhd97dD`ldih=W@j2<QjV>0RUAtg?]5Hf0HSd<K^?uR%8hfHO9aF.e!mF++W
9=q*0f5'8`"4SM[!7(aH3]\?YX5@Cs7=`L.VJ"tmYVNmACMT!e!(+iOn[J['iagi"
+Es?E4Y,j=<5cYK&\U'RH7TJ?aEF5#Kld7o*"K.!0Bk5VWo0aZl'!j[Rrb@h'AaIR
o]As)%#9q"Elu/eQV1"a?p::>M'%s6>X,DV=#/\QSW;aa_5H-*42&KOmLd@0O2Y&4
U\*>lI8"g>+3nN+rX+%&)i=CL_QmF%m`Fek^%hCd%lO.UZITq#AY^BiQdfYdqR)9-
K&QL-0-fcM7;[88r22A26`PNa8++I]k-"YiqU(T$DO0qOUPMYq>YAmOdM'hG#[02J
r#'U8[;0=7Z9VP'U-p=U9fZ5MG?3u,:8)P7U;?ZUSK'g:=s?tND1NN[aS6q?l\g#S
C3]aYU/@[m,o`9n9nT]\LZ"&l_>90XqS(<@2VSJr[pY7V$NoZCNfR[3[j&ZXeSgOF
#na2@<=qG1&iAWT'V]^1q'LZgP^l(Z1RZ`(7!t>hoU8ElEh+1]]t1CC+<Q?=cMD%#
<6q^2L3*"db)\7KZ=>r*h.=@$^2s@2>k<6$l_WoVE@`-;>gm7_%)n3Y?NeVLB.9:,
Q0+M]5J]*I;Fr-sR<S3ngk=(XMGDSC,r"ef,;gq^VSXT(Vm67%(=j9"@LX;[9>UE8
[_B*@9"IOE9MG>P?X"ruRbso,"e%&Zl7Qs<+4`J)afn]=b8T[eTEKfY\uqrpe+8%%
FLT]pnnJRbF.3YRF?;p0)7Y471$Wm9rrC%De[n>^p/4\!1_;k1Zmtq$olfOMcE%\p
G2`?6MgA/m]LCIp]H1XDrX,42<.:t',iGr'pM"UEKg(+2F=ZX)1>h6c.=Ch"D#MHB
F'ksff8o!S=#Y'm^\Y\C=>$DAh0aeJWmC\F(Y-!":8O(G\.]!nktpfM=oSJ\EbjmG
]tu!;Ys%_Y\rYGnF'2jEqS!qc/82X@l*N^CnG'.jX^Q?:gFh^ICj(0++>r_5NAVsp
!404A%o2B=FSp,Q6:o_r4Ls;0B)G$U".,&OFi]&t[eXf?j8r64=C!\@=aU/K9p"aL
F1!:hGQi$1.FBRd29b1,P:VZiCq=S=@OMR_*o*^?LE2Vlb$njV`C:Zj>!be,)G':Z
QIP,eH\F$VD,Y^$;,X9?,Uh>M/7E+?4bQ+:KRso4#)S<:;kkNG`6tS)*.*!$:*#sB
kk5p2BqIqZ!WK(t$_cck?CPMY$a$o)q#`p,%4CsYhQ%a;<6ja\q5fJn%j+-STaP(g
ppAsI1A[^Ah*Xt&-Q1TlL%G@Kk(g>3@t6.Me.Lb?3(mL=M#8'\FFUAt6gF'``6Xs4
#FK;;/b<oT00mS!UFq:3@m!moJm.=:!#<jib8cWWJZrD$^qfH\;0h&tZh>s$n[Bt+
FIXt!l:.'3-?;R[O5@HHcO*Q-=@FWOU3q<e+8#se"YIYgEkLi@mD#`&fstXEngi)n
-,\`TlPPc7]&O%oa:A,?Am^gP/_o3g5?52*$(hCE[<6n(507X2['!9%l4kY^@qR6Z
T#fBs1O)=qf=GF`KTD1)Pd3k+P*[/f40j`bfHd<$Kf3rc'Utdf:@H^sT8V3Fr[&t-
4\U21\$APlBd6L;]"Gb.e+tHD/sGu5Rd%?MEsX06W6h._b^E32B@^C\HQ*7fg:NuZ
3dk`+NrE:5dT8+3!tI[eleshp9g$9[brLc33UF#"[<:VR?C:%_Y"d?e)s8-OjL,@:
!TLcTWoX09qUFFsiH5##HP-j=M>S&-`aOW:Z:gr>/8$6H7od,B:NelrbK0EhjhpF4
;?>8X``AOV4t3=Jfs==08PVcRmD8oZ!.Kfg9V"Sb?SoC[QQocLC,ALJ7PrRnJGZi*
iAQ=A<4B[q#JhU0pnd&/Q8"O5!^uA6SpZ]"'DJA"+SJDi!\$R#NE/J[X.(Y)Gk29'
7I+(u<O;\LQ+G81EJ!0;g\d_OLcq#Nlmf>]h*n*$m<<Mr'n;A/B7b5$T`!2Qo,PD`
Nu(a[2>(=#=#:rJS;llZEn<u"eIY%,mp8N2B^585^Y,!bIpf_%6`bBaOp6QaHS3NM
rr@ur1hLkJ!.OG?nqGS'a<qQBGB'oT;3;%I+DKu*po\8s?fMKWm`)"E&)AhhrhW-a
EID`&qF<p0#:5T3$BnJn9s"._nuU]K?VL=8e]!e7f%k$OhE_?3?":U_5(i_#8B@e>
OorIT>c&$.YGl[4V39R+2_8l_*QrVt&"8P64?B[c2/%+B[tBm*AQ?1Y3T:1[//IME
QsF?$`N7[(Z*OWC$/ooTC.ElSfIK1lLuh7F$6iA7j=$T6Vn-E'Z:Q=)QVQdqRWVBh
J4`F<T7W7e;4f-]Uo/.rZ&btl3<&ur1bV,jh<jOa%K?FtdJ/FYT2qIdf=H7saCjU@
M=o:9eN+r$Ck*&Q(!IaJqQT&:lTPXN9>M`LQ8EpEB^,IG.kKn"XR5eR!oX'[;!-]J
-2Q;\o(NgCd@a^Yj!QG.oJTUr#5^[]!3'DT.)Vd1Vl*W=%4CqPDiSB``=-8KcfEsX
Hn<EO/C42k8nX/_(!X=).JZZ%cbU>K!bb2N9<q/kDoe6ZIYi.89=2Q.>Fp+4;YVM[
rq)GSmi82hEaJsEjGK7V[0_3n+G>oe$$Xo[$%aXI]&js%`b+9.E\YXWN^s@ejL]oB
SRK3AUt(YbF$O=(n9FEn)Qn14>!Wc319#\)b<6O))t70D'/fr*JE-8tbD!_#?>@<m
,Ia[;_9M04kV<\<T0l<uE)Z$IG#;JHD62n52:Qjck?VDk;t]#r0EsGX6\kdHmJd/q
oN,e?pZj4:qX%GQAIY9BadEC0Z=>68H%>`egYc-P&GLG_]3E*&YRO,,EGcA(i-.DN
;J^Gb@Mo!)/E&n-UkR8Fm[M9CV34FUMFf7;SGa/K':i<iR)bAZA/,h+SPiCgom#li
=9S+K/,ZHqI_Cp"Nfa8@h8pb(X3LJYNj"*8!/<!'!30@dp&#BHR/,bkU[\]R"6g4S
5%h$_o*L/Hj:fjMju7nl!#^i=n*/KbK&YcSZj6,%%[qWUWdft[*F#D4_@1p-.n3)n
oj%73CuiSu*FFS_eXn]mBMp-Wam(iF^X=cN8F/3Xg_OK$!*aCZ8>`F?4c+p&qpo"4
>gq7Y/[IErbIJl/RSp[trGg(-qKVZiGSqt5l[Mfo>u`.p(8(%o%u4d\,PJ6"i&\Pd
;Rq\a\D='`MS_IAE<Q7</!PHtl*`jfQ;Ds)\:*V)jE&B635<)*7Tc4>\+ok7H,bY"
q3\]8*.(h!p&kU2Otd2n'mW'_e;"D#De8ns[?T+2?tu-qLk:sSo*H]Gl2`<4=sflT
+sW?+UIkkfr):a9P*?_`ed>^H=.*B\j#DC@KZO'XeE>nJP=WG,b"e\NOfs^Xpo4'o
V\Wr>F=T,^:'N)Hf5uE!T@5Od!S5g2hG++Xqpitn-iPbT*G8*]$0GNQA:`YZrm86o
V^o*,KVAb;oC@`p+S9(/H`o[1i\l4'_KaOP+A^i1TTFD'&(e[$onTBt1^/P._9$4/
P+6/cV4p>ta`2N\aKTnKNBSkt]U&!S+q!Be"D-:OPZ8C/CSDW9'F-++)Bk.uON=B"
8;+r./L`'#P#B"CbRp_/PNfR=P*V^Sm>m]nO<l264WqdC_]\4tX8])EBDB<l%ftN)
:"SMDQZVC[?8K5GXT&:K$e0[G&cVhUj$1F)Kj2Bt$orMB=':gkiW2ggWZF6Qa0!:q
fEipU2Tk!-\:&F@Ndj^d2F&0fH[.!N>NPZZk`\;k=Yq$]iu>#WAG%KS@m!l[7_@2l
:4_/N!$@Beo=hGO%,s4XdUs_ga<,`-FW`Q]A_`L/<Haos$D083-=Fo7&b<DM)+$2s
M'U3mpmk4;Pb4+q3bjtQ'aOi%P':1g8Wo6CBd%n'ntS7D,l[kT.Se0pc=,MF>!_8]
+2M]#I:VU[YhL2lMMEd51#uA4DurW6mNt3X13d5h<9(oZPfI8-'RaWY2R@P0FY3`=
&58\s$Ed1V***orT\88h$j6&.NSa+<MquO-57PC;OagBOS<Zn]7rQuhWp(8pFYrf-
5sKWp/c*N=/0MPRi!ob6"d7J4M<(Yrb2JB-O8,eHR)jTbbkfT8=Wa`TJ_AC:[o_/i
pAY+Rb3e_]#Ol!_:FEsbEk#\n,,*6A*F?K&l[C)"(ZW*A(GNr-QEE/D_9)c<gt*58
LIZd3H/tq[a"W+n5o^K1$FX;rifLYk"89&gS3'8*P&s@@CDs?CVu:;Qa,9?a4^:@b
*s0#Y*iFdb^hA54o;d%p+5X?1Ed;Y>7hGX]bVM^u6Bg\Mc8X=%gd#;W0YB?LK-Tri
o>,_@8p@!%k)%R:WX/C,rr<et:qE5f>[4uuIs&cnUViNc0ll4P!6.*14/H0DiBK3V
R9VuObRmWFZadQ`n-[,5;T007aN-%@SKu#ZPg4iJChbmDe`;g7)?KreErAFWBA)3:
WZ>;\=351g5C,E`&:pQH?UVCpK\E5u,a(_JGl*\sU61j>q5#Ak:,MQ:-8\N=A<bfd
G2'#AOS5=C6$emm_JpYul?Vc.Aq!Cpf^5IHUhclA>t<HchlZVEgii@qZP(+a!/?*b
)^)rI+]uW3%!a$g'^gB`qV28a*@n#@*;@t!PA<r8hkCX=j;>\[4jKkuPT4H3NPoRS
7m8Eb.+kiINu3nR:(e]8.m=>G>'1si$'e:8]5.uD6Aq@f`lCP9TsSm8I`a]@M9=)>
b"<<.5,<0%,q1X?)C2.%C/o$j>^QP@8./U49A*gGn50%^9Ve7:=A>f<eMlSbRSlKD
)ML)Z*=<^1ND`%K!DbmO/Kfj3W=Qs)TW@(<WHQf@Se4lYPre?=Vf-('>VuXt66)gc
#S7K"E01@BZ.$;@79s+:W8oqlqAdrCGq9uMjm5,pW8dJ$7V1SoI9$Z7i:n&G<ADh)
XCos.!pDhMrF3t63LYQdHOO7Yn)ca_c<_mQctF7P&nPV=qXIftps*OJ0+n09OjCsq
Z$!QZ\CoNYb/JUR<XEI\]T8NDJ&Y,?I:$L!EqUT0KIK[8A5B-de%moKo.=[KOBh6S
"87AF8HA#7[oniRl>%Tp:=b1%5Tn(X/2"6j*6DUlD&SC6'>&%T:<<3`%LO_FJl'fl
\O`>LVaT@X8mN^*8PAlT5)BT,MKg(<;\D.pj$K-2i?^9omIr6.lVC`gXC^Bi6au)a
:rWUi^M)O!E4JObmoT"pg0@CN7:V\6n>Jgt/W_2EU6.2S0M6de6jh>+'umsY3Ap6*
:.D1toAYlF#U'MlMBioKDJMr;Ti-kKh-$o&r6rMs=SX(L+pnC79dr*L#q;+.7s"P1
'T"*-1u+u/`_NT1-KE?"eLB#_/&<LD&kP^d8L0HsJKW$&&4H4Y;e*E^:g*921.R#\
:m)RSOSC+7SL$3U;`A:U,"!8DWqK1IZ)/X'E(U@*X9MmC*5b)?9"[ESd;h2Oh1-a4
BQG$sbGXR4I]@g-]:nA5(Qra=E#,dqrqfc&p%[-geQXZ-LXoa8f\rbO\1^%hUN#)I
UcA,nJ'Ml(cn=N?\(%DFBr]$ubQ*6!*QEu'22L6;*LX/E+p_1s)[bAHmWS*_Zkj:#
rr@)_l54BWZn\ABOWo&ODrA6N"XFu4KpC9)S?.e-5F#fNgLFkMq5A>3a?rNlr'G65
8L5f2kp3*L.RSfWaZFVdBdo)LJj^mk.<2F@/7B9D3@cq-o3,8Dkm?K/<k1GbY)_bS
d$1C3RKV=ln)CO)l]"->4Qo!$_nePWnrDs)I6uLTENH/?QCX&_XYM8alFo\+`o`(r
'-8X,1P:L'%Fu,n[Is<g>j)dZU^75F+GC3KTIf@Nd8;qJ98&Hs@Zj;.PbaK<,a+C]
nP5GsV:$?[16P7%%(AtFntB4QM=T0u[&GH!J2NMj,W$.@qHb:/XB=0C=?LkoB9VH=
RimOAoTj%/+VIFh)M*r:C?1@ZHq?^Ta<sBM3Rr6`Ll=_kd;l'.,"^W^gcT^^RFn;W
;56LPnli10b);W,+khN*Pn,[$A]A1^0]XpQVWfC^VGnI$S-ue,a>:]XqS^XEe-M+O
O?P+$)_pqkNn<VCP/H%n&$@u?p+Y>GJIS.rEuA@o1D@E,=HI$$cMZ0@eI\8q3C?J4
Td8kE'U5sMP_>2u,iaKOn5<n@PeeW.mZNpqB]>1j&]2g$7hEp4^_=ksaraes\o%k)
aAWA:,k1nK1(BSAan:Kbk#77g$!sX.7YZ.^Vo^o^^eHQ*7-^Y`9cLe4d#C^Mq_o=+
2%*l(Gq@aT"g/3!2hVO"=Wu=sP't)c@QsHYK@O_WK]scg.7o]t,a+K!`?FB,A<a9L
IM,3u11:4"'TV8]TZAWb#GsQ?/\g%I/T5_#nl'T,[.DIq+cds@^g)aJ$l<G=Hh=6W
I/K;_BFraN!(0$<4;5,^@+rH)UHfI^n6I+db/4?1I,CbJ1H&a+?e&AAmnF!#U4+7B
*@4it@gBaTU3KT]_c4ndi@1U(jQ8STS1Y]qOE=R<ZFQ8u7IB*M8Ge"4eGfN?1X$BN
V3tbuULOpIf413i)?RIPIPm]cf&b0:%VHqN4NL7Q<+\u6-/'%%P*I)&,a(bsk=$^,
'NCH_R&3J5:Vo_'86QjCoMAS6="p8?+#RPo23B,,hgJH$ds'2(56[btm(XJ48kA,C
UB*S$'[h-"K$Jbm9_"i^V%]b;pluRFm(jJN7lmae:H=']iUG5^b_q1WR*hhmRK6/D
:9&8b2.6]V(8`5P'[kE.%PGj,*$9c/VZ<R#'[LTuYe_qkp4/IULBNlNKGi`>1oW_H
-]CQqdTOp%WnHEOT=oAB!_=41VMge])m3QgOpC!XLC\R>XfmFH#YpgNl..@Nn;0^c
-6qtT$VdI58'*[&L7Tkl*:fJQq/VXaNlSmA#!"`Dp*NaDH[)2]*0-j>l1"dTod:*h
O(X4Y\eVBF$*YK_ZX2YIc10n:^Ch9K\t$%t"r""S8jK6/:i%R+kp3*g:C/;Cj'OY0
eMdffcS1NLPf_6#I$.Cca@4*ta+?d96l6)Bj7KG=qCUCmefTm2CfoZgRRe@;EN4IL
&d0]KG+%BE+@I@!nE(5nU,O'3jL$-`+:B;MZ-u\33Cr_-#YT8k\0S!(Qqd*Hjl,-i
';A*[qSE_@G>rsKU@IuRi#L/U"<ipj;'BWh*1tB<E2R1R*^T1fKUD@1A#=s5kZ6dh
$=*L-p-t.L>3\^bVr9+'d[%Z::71U;.<N4cNuet28o/VCm`_VNmKEHS89H2;8NNqZ
LK<c>=EpsDr6C4=:-89RYD5HKhsWS\m&qNPU9O5[Bqe3^#Wf#g<QRp1ACIIsUic3#
Oq_G\&dS<`Nk4]o$(lf@)EE4BHeLu/ZE+]1U=SV%8\Y<A=t!nMZEGHX=D2D3V!IVW
pVd(3Sh?oknck.sO.&m/jGtfOYe!D$W?e;cR3\$?<17r$3tA5=A"cSdnl#[Uah$]L
/,WUJbasU>ENIa'D(KWi"cLW0b4O$M<_qB>a!9,Kqq@p`\RWgh^uX'co<+fu<F`**
!s':B#!7WE3W1;KcDT7[Xdbf:Blfr`!R<aHEMCORcE5rm`'MbN(ijT:K<lgLULF?Q
R*[-?Bs3tMq5[#$AIJE#'Yf]dC%M4cK;&r=dW]"?UlZ[<n4Vf;VqNT!SQG!7H`DL[
Z^;`gY2Nts=_#Mti2UCE%'48IjuT^qF.u5@*O2Yuo-$R:OHPi9V;WkI:B;26dE6GA
QbcFcSSbL2U0Q^Y-UoF\!.L(;X^/Z#:<Z(6k/V._5Zb=`Gk+PJ2QE6KcnGH^rr@F!
K+p:"`]]iNZK%?&"MsMpA9]E@qXUCG,pM3(naT=9Vk<Z2l,SZR$dPV,9L0ZhQ\eH4
;G3M08'iWI.C#;MUYe;p4i?>IT2ZcS<B"!hQld&a,8mn2q^ZQY])MaU9':XOIpPB_
3DoXWo0<hTB6'dQhP0C<HXU/+j<mU:,q1+H8L6%[:>Snj;n&!UZ\H2.TfF1RS!9/^
K2B63r)FicFT?o?U]1<^Y;TcpM>eu02g#m[MN?[pfJb<9Cu+rk>@$oslNL$&R.Cdm
:e'KkhQ[!iI8bRuNm,HFijd5(YkWT.f0f4ID>NAG)r^nu!2R3<Z0T!1<GOtfG_`Zk
#Z`2Od>1>GDh_8#q@:l4$9!E,kl/'i9XgpdB&L&LLuM'r,e9LR"j49hiN`6)n=L,B
%MIHJ_$uG[nkM=>nk9/rFAL]6;ZYB'!k99XIK;8l?/Y__]f7F?-fTcB8:*oJNCTEo
p.LuRS4',@"B_QELlcs2Lm;m3)F8^>]u$];</<4b=GS*!57'Y['NUKS$/mP#8CB)7
>Fd,Hd:_/a&GLug4FuPa<Oug:ocj9d<^)=(S:A(clT/`%K%/kl>5`"3!5WAj3V;6d
rpmd,.$:U/$)bUQ["B#JT[?0uUi\g)&p0-H8.(1312]*I$r!I^*s&Gg>T+!?@A$1U
!?nH6iBnOh/$8I_qGnZ#B'VZ=XW4jLZXk!3A6En^j-;Y"q18@eaF/N:BStR'fG/0L
W&s@t1smA>G*=]p<e_D_UB@[l9E@''N6iF9J[k6RhGJ;Jl?4dQ*!,amO!6FbEuF+Q
ONLdo<WE+"GfIUYon=`PFo.A)!'2N00cD'1j392T`sF2.#plTC.<EXOa@r/;b">gl
P_Y]OI4Z*A$;+pJ-$fgkW[I1^5^:mXrrAirT<hE3Hi>O##>i]Zmn42HihaQa/BP6+
d=%Wo3jV<dX;Lbb])Ma4_W/4I/cPefRD\d`T>3)(=tC(%^ugrm91Xgpl3LWBet;J]
gIq-a5`7KQa#\kO<Smg'0ch@J'6GZ+K447^Mt&>U?H4eF0]k>+68L0&`4&+l=0?\L
X*le*ej`qbCdW)XNWj]Heh=(L*>>G/!KK/ep4lIJ4jK61A&UJb0_#S@bBc&+:PrIN
Z`_%`k,[-:i,rhO"VmF_\gKl._O`c=)R>3OP^2JW8"+;]EKEJO.@rC'i_^qCeeX)\
Wd,Gfm]:]L=(DbQk#>U^`hgI!njYAQXWUQ-"DC1;d&pq"E[2`Kp/M+uN]_Pd9u^2F
&IN;Yo<k;a0EBUfYCk7]`S"FWX)%_7!:EnaAR.=([FhY>E<CCJ"<R*pi2nsMFjo?X
\P?$Z-SJ>1o,Pu*0o2Z?n/[&;%j]*Xb$+_l%=)+Z7Zl5@V^[R?k*53$8p1&c,r%1o
.%W9IpaN.h;-Xs1'\\^3.6P"g^#s'h:5V"J]go3cI?14(>rl28OOgnZT#:,tZK@0,
fdrN\b$?i3##8Jt3dq/?\Mk?*CE=g(V0uMC\OSp%oYan!F<$4O?2LD<-i1CH>6jHl
"P<Kda,e\[4-Sa_!4CW'\QKgGM.W+I>B,ITT_[GH%/ST,aOg'#GN'?MqjV7^lZ_4n
cWGCfotRI94\?Q$a+["7\2_M3&@:tUc'W>;i'W<l$.VM_WZfg2GY.h3G)1hZp&gQZ
!0JG_Sd_EkUK!D0P#C@:_(Zi3k>]?\P*^Wo0M_UG#t[hVj=]Kj=?$eqP1.UZa5Gse
G&k1?nU6sbL"Djm]:"^Yk]:t#G.2RL'B5k*C.fqQ+?`^,BDBNSEPEKc_0/J-X"PCk
!:c#ginE.fFu]a!S\fR8-$Jl0ajui&;KEJ=3=$d;-#nE<=9mG!K_)/QNIS$2C:N`7
j)<LDK_*6b#Q3XQA;puFAb=9?SC63:C@;@UP<o+l>lJ+*\GEIUQ875s&L>s+53'1r
ER056idsHZ$c(Tt.P[f?\s89E(,-U*!&[Z\r)NDZ\h!&'3-HUN"aXM%3:YrUq2Zf'
,'*,I7ooWi(S+@!FR-Mjo.%7[ZoQ[EXosTA<gVA*nTWHg\op8dISI"+$kMt\L:+=3
h8rrhenXsO*9N:S4.e*$I]/A.!3<UTG-4#;*u,[7NR?[49)>fF%]]oE4E11p_tP/d
bjL>9ZYK,Q0l&=r)aJ*Z#[/qh7&?X+9BSHRr*%oR3?8m[i#2/,@Dg/-l^>KT[F8FG
B%BH#)f5iNYA8i!2\M(NHRcb,fF&Z^^_kG`UkX8Yq+:pO[#j9pH(Au.V::g'(7?8%
4afs(rrD!eIK@@d!$\n$VL;G.4]eOm*5MRS>.fI,]qusXTRsR&rr<f4&`uPWmIKt9
@NQ0&1lu4608Q/UGp/B+m=*GiNi!FL3+GmL?c^CSchOO),fn3>%gWHJrr@r%K[Vhd
I=Q>@#u^d'UeQ6;Id7I<V"(m9*hL^IL#d^Hrq.7YXNmT(geO,llYj!?d@kXl:OiIl
7Q8h(Wn=*$K%l+MCRkD)_hF$A;[4BTl^(VKMT'_hdOAkgXX%QoF6E*bC$AqX@udt8
LS]KYCn-9>Nk^dU5A$_5pc7+?P3qbCE;G#FENlH['XU,@"AbFJPNGkrVqdUgSED>j
Og\$hPXli6.4.4b"f:g_XJ(XMj`^&C`<F$-*%^Ca\.7\%VtI`YrchEbT8P)Y.ll/J
HU-)EU91&2`]]nbi[o-@5F"^sU+PceQ"]M(iMXX%d3'!o?Ap6o->J]9@Zkud,a>&e
dK<IhPc%kFPe4j\)AOV04B+R;9\HCN(Y$`sJ^o)>Ga\5oBQ[?;?mL)P6'/Y>9Sa(V
rr<kRO0(D"GHT?g"XYC5>:flREu1S0F?cu(Gh=1aa0MU*290\H/MjTPH3_E.T3=:9
5>(e<e$JVS$7i,m/_'/C,S-@$VsD+J>@VPt5rs@]k5PDbB\nujFk,:d'W4qtYH0kk
i]TK!5prp^#Otj\b/CXh?:@X2+mhM52/6GWj`1;#?3k1@kgo:4pa>2??lDS%l9%@t
aFB-qQ8>CAm5F$VYJ_eVMbDY(_H`sO0IKR".EN-Q(!9,.\CEOS,ddEm@a:1'_l,E,
rhQXaW=IbWCD6Le_sVMJ]h,$lr/`or4:h$U`VP0XqRKEcT(2TM2FGk+aX<,P&u\YM
(6RS^r"P$%*$g<'rr<l&%Blb_^i!)DG]LC2!F28HEX$GaX+E)5r)[1>7U)j*8.QEm
VEl^t)D4OV%A."=Mb]c+#P'L[r"gN8i6UqQHUm8ZO8=s/*Ju?'^UBZ/q,0nTV*\\/
FPNUbq7l^?IT8U8E@o1CWG0BrXQFX\();7!XO1g"Io#_F%"SU1jLT95UM&-fQXJmZ
bn9JKCp;NQdaJ=Y5p$hK54&(<GoL)e12M<lZ-RE2S&>qa:pbRLhPAu@>::L9`ui9"
\3jgo]`<a1'O(oN&<`@T,a(_J@[qM68!Los8mU89iB-^d'U4`K&b0-ce2&1MYrpcK
rrAe(Q?23":T3D>[:+</OFPY-9OBR.CgO=2AgT];f)CY09*LP^+n_EH!BM;O>q>oU
rEXZ'FQt*1)]t2MI;JWUC$9Kqh%TBcQhRP$fJULnS1B&`rDgJ"&Aie!c6(#)Zi"'V
??W]f,(nn0-5TT!--%ICH`?&OpqM6'icUd&:LN3-n1(&,rr<kkHS8fW=o1agc!p20
%*k<Q(O>REiMopWFReb6rr<or^^B\<nc04'U1<=!rP/8@:d7O(NKONiQHB#]lbM(L
"%5>1[uVV85.=Ak/*d#%4.>mSr/uR-E*lq>I2=B:(mFb^lbOft;C%eRW:SOk4!EXi
J&X]>FtKeD3Ajq43N[(dUlb^NU\,ktIn%??LBjb_.']'ub]FKGf5&Ie(O'ID24@ZB
D]TBu:[h@9kT(/tof@O`M<+MM#Ok4%;KS]lI;&JhFF&@)T7_tBQ!:GkoZLambb>%:
$QK'12XdV0<NZ+"%;@2U(BaJ5=8r8Y^T.i"g9.OW!%,U]hNitD7R"9lA(pF%Fhn"W
'ePJ0M:]2:Oam/8l%<5ggo=.`E&%@m;P8K5F\9ECFo7-<j*'W.F4/OKI+S4j7=SH$
jtY9.YSciOli-r7i:28kI;.rVDTqAD<hkdb+ndlT3P_%=4/H9UrrC&N58Ia>J_9@R
pP,J<Ro'p,f?.CN-2V'I@8I!>UsjSV=@E-!9RaMM@A?N"X4Dj]c/7=;[6rN;&@gYA
rrA"AkE#WCHrD-I%Ye\]d^&*^Op$ia//J2&kt_*;hQLF*V\@POS/a]Mm>6l16sicP
+&#:<@9*!dlE.:>gTl<WNXF<D=amP[r81>Dc\Wn;U%C^KU.@0)o_V/Bo&tJr=O[1F
6#42mRc3>c;RI/-IpK*hlb*k>DJ?B"/`L>_Y6DC,d'^e6PF"T71,i9Y8:+XIrj0%q
oS.uucf>P<G-e1B*D+kJ(326Da0U?I%/"Fhip$@BVfn`6I9_ob/NtF%^aa:!-!+VB
eN`_\&9Uo7[7O&%<0R&J,qqIHP&cq1P*n<!UYe>4l%IpsPg7!SFC.rd)tfi$SiuK[
q67#ES?9Q+mgT'5e!tOY1I:hg'UZUR[TaQZqW9^/mY:_tYTNM(A-1f*]oB]qU;)N*
"7Zc(*.4$HY\UGY8eM.e-E1Od:6I))C!oS+l?%G63eB=>'11+NQ3g(:L`-Yk8C=/?
-FL8`+9r?td1.:j'M0K'XXkar+CQot^7OjNa-'[pAT3l`OX2qA(`YC<Pg40q'08`D
$A^2ZKeZ_LT#6f/Uk2):_H%7;AC([OY0RWh7qqH`&=P)4&_T"NE(Y@;VN:BVBS@OI
LMAp]W%Z$*YXOrP4F,N,r"5V`89:p0^!No<B2?PnpC(_"Ju*,0T;qSt:'3dH]&tt8
ijVj6;&A%a1B.@EH1bb&[_&S)aKY[E'F4X<Mk6;#R*NmNrr?.<rrB$(C1Eo+cZMEM
ou$(&]aSB3ID3qZXgcc;B6-j(20*IuP'b-4df0<+eq;C*T?1tD:YlmJP1MOV\8<IP
X61CQc&C;#hQsT^!^VoOe+bD2516S+E>`W\/I1fG?1^q/6HIasT.m.84I#aV;Q!KX
C6D1u;@3=oP#E`V&>D0_G6'HkABbn15Wa;T:Np60?fbE*M>Pkj96T0kK)(5:U]1<f
.5;oH>9T\g'Du9c?d^%TP!=Qb>%CEb$]k;f(nrGCYO(&1rr<5T<s=,7i%%<*_-/I^
.Fg)'C)!'s>&od,mA_`^*P@I6k"t"1j2ESQap1d0,=?0Ii!YuuFJl3Vgui>NNHC>9
4pg<FaW<U,1$kB#_F#;51HOfkS^bb%qe1Z7&0W1V&_k,(*E!/6dKnKM/^qg2d15sU
*QO0bK^Ni""S.?O)aQM?V!B%W9^)udpl\T[80I[THaam_+*'baTQFf94&!KEQ"39'
,f4"oi$?)>2"$`m!<Z%a8ec$(ihN8Y_8T"(D?mP!<*\A>4@.LW+?Y:m+Jl*F@/,oe
2,'4E58;r&`le^r8>QV5@2(:3-7W@:d#stjr+-E9+)AKt,-rec\^#F03lhGfcCoBq
iuO?VB$rn%`]N]qLc_PDmTS*7.'r7XEGXQUTBS5*jN$8Z&Kpudm^,2Q<kL=T'hn*j
lO(6S=:]Lu.?5*f18G/,8lQ["/S-2l`A2^0Gbh1WcpD19W>XD(B2k,@YU<Ft%FLT&
@mP6MrfC)^b-3EJI;]0[*7k5O%L*U)BS(l8I7O3F$0bQQrS3^,n6K?\h+_GSCJWm$
bNi6].f-j_3!0BO93GbAEP"J$li]rQX9WXZU$%V<:]1j,reP?O7YNroM'qC?C4b[r
njt,SPNfH07YaOt<2>g<#T=Qc\f#K>%6P+6mK<OK0uB!)YL.P[XhB[].@^BJ9PR.^
T5t8IE%hS@Np1FqBEq'Rl)HduBW[u1"i<jui"PrsF<1^LRR<ROQlqbD_)ZbqdLLn$
4oA3g.YTPcT--ETQjmF?T&gNF6&ljSDnr',FOO2T,m4DM1.`An]T^3:%d4gnpEEAa
]td4$,I-i6phP]f5nZIK8>_"KNo13g6faVd$ku23*b0`RJ_6neE1ajA"U$P&`16s.
j7,N%R6$=*E'%XdLC]bFM,]H\2[O.F6:m5iB+6+O*_:m7(oC%tYaRF<C8XK8,fCn)
S,WI*%Gg\]0?\)0!2LDEN_?V@ER^9bRdU0f[s-A=rpa)ToRc!TnhH\h;[of=CLPJ-
!/22:K.]<WI^D=4=[!(_MP>32a_:@Octh@n::q-[=kn^:Pm7I+=AU"&VkEj]V5%"Q
8L6+Pq4nOi8&U(t,pb>EeB-%ad77!$8k@V><Q\t(V"e'/5L0\#3EGDf3j[I%VLPrd
Tt!DAo`"p]MbSEo?Y/\>2Uu:F?eb]?'"VtFGBDV=j%Bp]&?n@2JFBM!E7B>qO25]*
B5ZrnB?$6ee:hl.eo)gs8Z>T4=MiEi9TpA<KLWNjjpZnhFe[jSY>(d6Qjo';Js!#"
!#Z9sV)qr``9L-.h)YISY*fNGi0eTlTYReU!ZXdk&hG9;11N`s*P+UI$j4GDkTb$c
>R1SZ.lo/ICja/m*J.sH_%:u$2u$JLQDdL.alGJ`njH$KQpH?RIRIC9]_f)akkHNE
P$Q^r5"-V@;D#h%1b!;bc[QZ`6")#@&]u/Yjk']%"U;j)SPO=LAMVU=Sc`NuVV2=g
Ukoc<+@:l78Kp5!VIRN2nP2?+)Ms-dTF$]mYY.B!V`5],?PBB!!18jP"+k'U"JD"@
UiY?1!B+'&:n31-pngFoV.,iWFGL3r`;8EJrr?*2JH#V#-$b1b+/[qJ:![=gcXa`J
d3SJs(TVspDZ59[e#5+<nh2c_Y2.PU-XEC%;<I[?A]3VO5+b:pCNUrBY9X\H@&e`E
@th&9_#$!%OrelC/>9+ed8jgE0M7]F!eL2:9EPSMDWrJ',a?8'8!LW]VI,deWg=1c
9KVI$R5:+?@^4uajU/=hTc]0k!`Pfa"<F+<qUP'2Pk4nT"]>:"WEUHGN:]4FJ'^"B
/:X`Vn#5\&:Y"_Xb=8TEWnBB*F:80(X"G*n3MF^Q%tP@r+.)9EG-jgh0dBQT2+e/8
'\cNub!dmj+Au+O8HT9C80Fs>:Q22(-4J%R:1Ym]ZG,?T1/eu%5s;^uP9cCrK#kNG
,?)_PT6V%S#F,GU:fWfHNJ5)#TUdh\+IctKmK^f7QJoBPJ-8B]75<=&&=[;80Fm0"
pa#+WY98Wu*%!"1V->MUUQACe">jjZ-.1Jh+:6V@#nhJ05VeU>TV;QbJV=qp,%olm
R1P"N`$XG-.AKjCQA8[YIn@jlmn:^Z]X+FHq_#D.bCdP%lTIP'Yjqe_>DN.i]T8g$
p(H9=Z+rtD?^*>+h5f+>m-Pi(#>]rpm'Z]*S6$QdbpUVD"/&Y^8dBbgUsPk9!2NQ#
kTqN)"JhY]8L6&73%9O'FNGtO_$Q<c$='C'gWHccU,1_W,-Kd&L;Bk<i-uqm5%'!=
a&$u`r\+"i30g%^J6>#Gr*Asmrf`81F##2V-F!6!D;#tBKrkOY!93OTahhuW>+\a,
rr?+S!9_c4mZhUZ/V@?!+8g#_W?gJGbLteZGOTpFr7(T1:\9+L]FG%eL]0kgi'a0P
,mHU9?,.Lq]O`om`X\@71T;#2qCVlV[d3[A$Z^a:INoj,d>a7=!aH\OOp@(#?@XL7
W.JQN>^Y(?8@l:`0E<91AM@X!mZLuRrr>[flh/;s1<8GIQ=[@c[`;Dg!-`UWH!4SH
]B]nMErN7If()Hm+5j!p0&:YMoh(r\glb4t-$FCCajn]bYi-HpNl_k9kje?EI`;K_
Ng6#'*0Sa"JiEZg5?8aerk0rRF_,^D%Y]Ksi1\iQn1G@OC7[q.0rOdpc9Zf+.tfa)
RXVmI<O_tYm.,3;5D%7WlOVOHLU3r-8_+m>5:X-TeZZ%*28T&EbJ'2p"$\*OI:;uA
dAm&^dcdQj?8bq<^:))e&)`s()/3V(5_lXW=&-8")-"=t*oHEUD/FdLHX6SJ$H./`
\,*B2/[!gf=`&p_&cOEZ@!HiY?<o.DU+ANo2ik4F"28bkmB$(037`=*:\g3F=e'B;
Puo"2*T+h&c`;P"lT_HCddd>;#iGRE+cuFqJ9K1U)A&W/$]aP@5N;j>@iW+$kfLlI
_6+rS\5*6Z-!8(M5N<[IR;9#]m:4ik#p:'L2'>&(>%7.h'TXc6DdE4t^eRBb/d%9W
&;5MDjk%-34V'0YKAKcY56O9[U_*22pSI[%1=*0&/;^tP/tWbZ.W,1c(dD#WLYlZU
K>+W7*E;Zni0m\05?rZ<ht/s`@/)g&r1R>uX`S>CS'K&1rr<>OP+/'R''0Rj)"n9=
lJ=X,p7L?#!I)rcHm#1t6^/pU#E'Qdk`t3,,!O7e:MX83=0c)O(,ukJBchrscC!L$
8/r#o,N_o[d>IjKU$BF`.h==<q,T"UC>A*-$qj\lV?fBfYhF1+].t2dkY<uR-"-Hm
dXmbU8NKEl)3NZAP44]rM(*`!<4GU8Uo$lJ=CD(H^'_2l<b`8f![L)eh$*Ja?sWab
fFRqt+-C;d8ml;^>UOuAfK_V%8u%#9Zg&Pr5mIeg"`rr`IS\Lq-64%-/L5QBXN^Ni
XAL%5maU(/cJaCSk8f\)CQn%qScD0_278`/7Xu`p"Sgt+PMD=o1*dW$&Sp%Ik3O"(
0Me$X(UOX1"%hOo"@4.Dh!5:,KAV?t;FAP(7\ujYYgP?GAB3Q<dbZnH*JY#iqO\5^
?#?/N1\k*MSMOhB0bq0bO!M0*6&=m'SM_h5A_YM!5Tdsd+'F.:=Sa>6\(#A&;W`G9
L:=/S=7A[I:R6ja3iV@%PKsmb.AW,APbR_Yg[pO5jXBP[SnIBF%K?EtGCcaKdRik<
Cik7-9#N)Y$<mc4.\G<2`Lg4Q#O\rY:QZ"I6Sm.Echn/8,'cA'k,Qt?cp.j)Pg=$m
SO7o1G!t\Z&g90\8A,?S%;d:NJ6"&K%ZSp*l'ZEKPe+lao=JL"JV+(I'tQt$-n;,o
W4rEXc/d=B7u5ktTLbC6,=dXfM=kAPk4C_'bf")e]#P'.iN*IgparS.W'=9uF,@aB
%P]PVL=>2*(\kU]rrAPcHa;7UpTBt&%WFI\!JL8>nW4+)!>b4Gr*0,*2FC5.:=OW,
3Zkm9rrD'DR`H?%=#,pA^b['im?k]L]^j/Eq"RH^=1AVC+9G&h6tILkXl'FcK?O+P
op)qq\:7Ut+QsbVi?XBcK"-8n7JQ5nVVr&_dp7`sGa[1.Ha$lj>U0@Y:POtD?M>6.
DQ??rqb*Kh[.p;)A-kC8!D[i9'8pdW-"4.DL!XEeE:8h3,_aROBVI$(fueL39$n-$
b%BpjR88u;G=a))mj[Bt&<]Xj8nlmVi_t;*Pg-(*RRr;t*>MCu'q,ErN-@R9Ms?j!
hr=HcmQ/g)!1qo]^%DQJrr?(SRPY#WC&MUMl>,\"l4#VX[(G\u#72%fAjX<0PLR=W
=49lL2Zg(^$ESEo/3@*1lHj0D.6`nW:a<)tdpCktL@B:79l'gY^]X%1Vu5]Rd>eLT
kRTk!]5U\5?1)3P:XQLanV5+,Jr##FX%^'YrI=&RiFpB7qUH9\I=D$un#)?6cgo`I
r">`i^X[>5YP#=EInJ2c=&f50(S:S.qUO!Loq/6If=&7GbgBqGf!r*d$as\Nkth.9
Pb3T^N42`.,W9"(Jlq`V*[$&jR\_WHl].Ar+l4)%IRV^Xk!$Di1\P%0Ls'`+7Q[U7
&kiQ[cr/!68L6BH=]ccmF$]1lM"lZWX,l/bn;ff."7FQ4Xg`dNb\rIor/.u62fAK*
KR_q[!:RlgoR<f`'M-bG,h4Si8Hq1'3K5BrerEBC,Prci6aaP+H[(j=59r_`H!g)b
^tsuW4g'&-=&)u2#Tb+kF6X;]Ve%Ps>EJBY`H;3S)=dTfVGA'p)DPXRcoa>`UdPYL
&HF9"ZBA[!Q@dr+U)/o6<fDL2f.e0h4"@_cG_PK7a1eh0k5B)]#P3-nPLrD4d3aZH
%R*6m(FD!@[g67)#IG5p3Q+j@&ZopYR]LjX9e&GQdZi!+=(kQ:A'H;Q-;mD\P`7m2
,fCt)q+3N]07lf$7&)TS0S0e.)R'X%?lnP]2Ek^IrrC:!APreQXi(8OP1Ag3>C,I+
X3e`.ZAM4!<$8O\A<8kcZ<9UK3kc$d;%=U7HYqBZ)^S9M?hh\<f#+A.q!@]2Wt#(/
);eW,1n1L!5p3B3I#@#MB38eVg@O5Z;0PgY"%M]A^`l:j+B81P?fPoaaN<]Ap'D9t
M#86hrrA't:UESe6`K3jNJC;s??Ps8dJaI+.%9^17+U9lO[pPt5(`e7Y+JWFE:prK
%=XM0(^TnR:@>Uj/Zp=B:<BM]/Hc+LY<6m.Bno5(`?B<<d)%n;I3Pc=nT*dn<b?4e
*(bAsOikj&I]7lXrr?4XC4i1!EK@ekbQ^dl!"[qVjZV=],c+pFV0+u&DCuBd*B3;*
Ec%lZgh0+>lbdl.jJph[I^K&b`l668XPuCnqs)4KiQX1#%F?+3St"p76(\jFX:F#)
[GB#:'S-O<Y+2,fc"&d")4P_#CVZ/.UOLejo1=kO9ihl#.gPgP'WX"CrrAOs`X.eH
pAe"+<fLHiHJL01qMmoCe,]+<;UI/!]B`8D$=Mq:$c)1GE,nJ7j"#\19$OA]-F,o6
K(?\Pl1L:R4hXc<5U$ShIELIH38[rcerHF)U*S=,:W18P:da.5Dt/J.S^R(3>r_uP
.ruQZej,Q-eFqu/l;-"1O&&3F'0?-n6L%,Ri92;O";kC@5PWV%`7>:`(qC2#\b2%[
a)6dj?fNuQJX+XQ/K^Ke!2"q"-.7tQ4^V@'"f'bA8WOZXj]38L\n.#1/sf@dg4,"O
=+,Mn[:Zri!Ml<1m/@99+'JT:?UKIW4nUpn#,mVnZ'6\5Wf2fGdBTV-i.$Vc3So\=
E9@FrT^YX!/&aOc;Ym:[<fXENd:mjt9dK*@T,9\EV3BECUH5;.T!?eF%a[)=@!TmO
U@ph2p;6_Iac41aqgd/uWp:IaFF*cg:G-icqV6)6^b-+,J3P'k-#_gVFVg%iT3H:'
"-I81r1thM2Lo-(--*>Bl[`sMHC%@K"'l0Gph65sA*_B*Z\*sTiYp8"J0^^N3=73]
o";U#%4m!4qSN(,,9)YH5I:LUht;cjXXtmVJa/B<V-l+R(G6)rA:8<-;U4Qqr>th#
bM(-A)KrIh2T(:1L5KcWKJq0^/Tgf%=#"(/,l"L2]'dSKYJ[r\O@QoKW/Yn$[@%5@
eK_Yf?8_O%[.&unOs='q#D<f5,gqiJ=Ql5ROsf<g;Xf'4'Yi3s5"R1j6406FW6mkD
<4<k\;`<@t$C@iAFAOkh!mm;tU[ocX-2$(4l0qVh9A2k?*(ONKmGNtOPOGXsM"=24
VY(>Oq:"@PK;i25"8"^.WhD!60Vf.jo<n*;+jb.*YQ:dqM"^mJSD)lm^`m@qF[;^s
7c?OW-+&[<56R57)mC?XW,-W$7]AKCH_:_$SB+jK5IYbe[Z9(;QM70'aIT+:nl#rZ
#AP=<:LOAU;fLe<'&R*`;H%r/(k`oq&:@**m)-WLVrOMM/osdV-i69OaWrbT9ZS,,
m;_V"'Rsb-E#K&POXORMEIq0(fjW<Aif[H)T:.Vp^`Pe^U2dLYWN!g\JLM#:p2L>[
6BcI3%$s#(-3@5$;39X<i>Ute9PgqR81M^G%m2n#NiHH),f,'p^aUS,DK40s6@W;%
7*;lWC-%Y=4Fg/lA%VXX!V/_&)SW.4J7F93TUe@C%4*"mPk/4piA#4!LhR#C.RWL.
%O-6'0=3f3Hc0[OH\?c(;],-gPI1;QN[9(.a@aU<2lh'.gU=cML'`qFY(1nF7"<c?
\E]\R\rKF`Z,+^qX<\U*,uo+5@RK5PW&kiV*"#`2p2ut'@i\jC0=&'CHX-ar_,U(5
R,Fq`B9(pJ'M^a13Zt:141-=$9F?u`GjQtB8E;%m8kDO98L]_B3b5kdP*@7;b!UiC
.4IN[++d&dg(I;<Kdf[QQcUO';O"QM5)C^S.4K;"&<`=@Pa'n"M$YVV1!2f-lr-1V
C6G!2NZ:$V(-c(sLMdakP*u0t%dA:p]G*Bq:1Y^s(,UJR.;ro]\*cVS,UAP:HF4=g
OleYp\tV$CKr9$jaX&^.pqh(mSbJiOPhbPeP;gC&M9A\-"7SV,.4H]&]RR1EkDiC5
'XtSrr)-HL@u&#V:nHqkSad$\%dch]NQt::Ee/:%k+l82g(I=K<1`A%_`Fa>IL3^$
P#>(PVD$t8<!^oMJs)O>eKl%],c2nea,4Dj;S/`d8L6%JOHZ\L,a+Mbm$k:P,c+0\
nP@gd8P<fjPe/6X8P10>:7=B-Pclop.GuIAA<aHt3i@g/#q8fIGob=bR"U^!$1ppu
,c0EG!%"_DjWuRQ8gQBpqkU&Slr&G"n`6"2KTr9qPMJ'er$8,f85DHr;EKPr[)ts2
n4=oT/eZPU!D,li8_#3i0:GL:;GNBI>=?)g"Hl\?jUEK"O<fRD8kN"g6V/RM*0cPJ
8P,*e:m+CA^'PpXP*:8,Skp%k8^efXP*72d$:u[$8HgB(R3WK0;Im`Q,a=N[84b)&
Td.De8LYcT\f+-h-Y/=e8P'QD<&Bb97$,hg8NS2PP"L6(fa7~>

n
Q
Q
0.0 0.39608 1.0 sc
77.76 352.26 m
/N10 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(Venn diagram:)
[16.0034 13.3392 14.659 14.659 6.6648 14.659 6.6672 13.3392 14.659 9.33138 13.3392 
21.3314 7.98702 ] pdfys
[/DeviceGray] cs 0.0 sc
124.38 352.26 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(We use these to help show probability )
[18.8651 11.1129 5.56243 11.1129 9.994 11.1129 5.56243 5.55843 11.1129 11.1129 9.994 
11.1129 5.56243 5.55843 11.1129 5.56243 11.1129 11.1129 4.43956 11.1129 5.56243 9.994 
11.1129 11.1129 14.4296 5.56243 11.1129 6.65719 11.1129 11.1129 11.1129 11.1129 4.43956 
4.43956 4.43956 5.55843 9.994 5.56243 ] pdfys
148.38 352.26 m
(relationships.)
[6.67517 11.1309 4.45754 11.1309 5.57642 4.45754 11.1309 11.1309 10.012 11.1309 4.45754 
11.1309 10.012 5.57642 ] pdfys
172.38 374.34 m
(-The \223universal set\224is the sample )
[12.1797 12.1837 11.1049 11.1049 5.56643 6.6492 11.1049 11.1049 4.43157 9.986 11.1049 
6.6492 9.986 11.1049 4.43157 5.56643 9.986 11.1049 5.55044 12.1797 4.43157 9.986 
5.56643 5.55044 11.1049 11.1049 5.56643 9.986 11.1049 16.6392 11.1049 4.43157 11.1049 
5.56643 ] pdfys
196.38 352.26 m
(space, containing al)
[9.988 11.1069 11.1069 9.988 11.1069 5.55244 5.55244 9.988 11.1069 11.1069 5.55244 
11.1069 4.43356 11.1069 4.43356 11.1069 11.1069 5.55244 11.1069 4.43356 ] pdfys
196.38 528.959 m
(l elements of the )
[4.42158 5.56243 11.0949 4.42158 11.0949 16.6292 11.0949 11.0949 5.54045 9.97601 5.56243 
11.0949 5.54045 5.56243 5.54045 11.0949 11.0949 5.56243 ] pdfys
220.38 352.26 m
(population.)
[11.1189 11.1189 11.1189 11.1189 4.44555 11.1189 5.56443 4.44555 11.1189 11.1189 5.56443 
] pdfys
244.38 374.34 m
(-Each event that we want to consider is )
[12.1797 13.3208 11.0969 9.97801 11.0969 5.54844 11.0969 9.97801 11.0969 11.0969 5.54245 
5.54844 5.54245 11.0969 11.0969 5.54245 5.54844 14.4136 11.0969 5.54844 14.4136 11.0969 
11.0969 5.54245 5.54844 5.54245 11.0969 5.54844 9.97801 11.0969 11.0969 10.0799 4.42357 
11.0969 11.0969 6.6412 5.54844 4.42357 9.97801 5.54844 ] pdfys
268.38 352.26 m
(represented by a shape \(usually a circle\) )
[6.65119 11.1069 11.1069 6.65119 11.1069 9.988 11.1069 11.1069 5.55244 11.1069 11.1069 
5.57242 11.1069 9.988 5.57242 11.1069 5.57242 9.988 11.1069 11.1069 11.1069 11.1069 
5.57242 6.65119 11.1069 9.988 11.1069 11.1069 4.43356 4.43356 9.988 5.57242 11.1069 
5.57242 9.988 4.43356 6.65119 9.988 4.43356 11.1069 6.65119 5.57242 ] pdfys
292.38 352.26 m
(inside the universal set)
[4.42957 11.1029 10.0799 4.4975 11.1029 11.1029 5.56243 5.54844 11.1029 11.1029 5.56243 
11.1029 11.1029 4.42957 9.98401 11.1029 6.6472 9.98401 11.1029 4.42957 5.56243 9.98401 
11.1029 5.54844 ] pdfys
316.38 368.819 m
(-If event A happening means event B )
[12.1197 5.46253 5.55044 5.58241 11.1049 9.986 11.1049 11.1049 5.55044 5.58241 13.3228 
5.58241 11.1049 11.1049 11.1049 11.1049 11.1049 11.1049 4.43157 11.1049 11.1049 5.58241 
16.6392 11.1049 11.1049 11.1049 9.986 5.58241 11.1049 9.986 11.1049 11.1049 5.55044 
5.58241 13.3228 5.58241 ] pdfys
340.38 352.26 m
(cannot occur, the A and B are )
[9.97402 11.0929 11.0929 11.0929 11.0929 5.53845 5.56243 11.0929 9.97402 9.97402 11.0929 
6.63721 5.53845 5.56243 5.53845 11.0929 11.0929 5.56243 13.3108 5.56243 11.0929 11.0929 
11.0929 5.56243 13.3108 5.56243 11.0929 6.63721 11.0929 5.56243 ] pdfys
340.38 621.96 m
/N10 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(disjoint)
[12.1976 5.54445 11.0989 5.54445 12.1976 5.54445 12.1976 6.6432 ] pdfys
340.38 692.881 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(.) show
364.38 374.342 m
(-If both event A and B can occur )
[12.0598 5.54245 5.54245 5.46253 11.0969 11.0969 5.54245 11.0969 5.57242 11.0969 9.97801 
11.0969 11.0969 5.54245 5.57242 13.3148 5.57242 11.0969 11.0969 11.0969 5.57242 13.3148 
5.57242 9.97801 11.0969 11.0969 5.57242 11.0969 9.97801 9.97801 11.0969 6.6412 5.57242 
] pdfys
388.38 352.262 m
(together, the )
[5.54245 11.0969 11.0969 11.0969 5.54245 11.0969 11.0969 6.6412 5.54245 5.52447 5.54245 
11.0969 11.0969 5.52447 ] pdfys
388.38 469.802 m
/N10 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(intersection)
[5.54844 12.2016 6.6472 11.1029 7.76638 11.1029 11.1029 11.1029 6.6472 5.54844 12.2016 
12.2016 ] pdfys
388.38 588.601 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(of the two )
[11.0829 5.52846 5.52247 5.52846 11.0829 11.0829 5.52247 5.52846 14.3996 11.0829 5.52247 
] pdfys
412.38 352.262 m
(circles indicates where both )
[9.99 4.43556 6.65319 9.99 4.43556 11.1089 10.0799 5.58241 4.43556 11.1089 11.1089 
4.43556 9.99 11.1089 5.55444 11.1089 9.99 5.58241 14.4256 11.1089 11.1089 6.65319 
11.1089 5.58241 11.1089 11.1089 5.55444 11.1089 5.58241 ] pdfys
412.38 603.542 m
/N10 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(A and B)
[14.4116 5.61238 11.0949 12.1936 12.1936 5.61238 14.4116 ] pdfys
436.619 352.262 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(occur. We write this as A)
[11.1049 9.986 9.986 11.1049 6.6492 5.55044 5.54645 18.8571 11.1049 5.54645 14.4216 
6.6492 4.43157 5.55044 11.1049 5.54645 5.55044 11.1049 4.43157 9.986 5.54645 11.1049 
9.986 5.54645 13.3228 ] pdfys
%ADOBeginSubsetFont: ZLABAA+SymbolMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ZLABAA+SymbolMT)
%%Title: (ZLABAA+SymbolMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ZLABAA+SymbolMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ZLABAA+SymbolMT-Identity-H /Identity-H 0 [/ZLABAA+SymbolMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N14 (ZLABAA+SymbolMT-Identity-H)
/N14 (ZLABAA+SymbolMT-Identity-H) /Identity-H [ (ZLABAA+SymbolMT) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
436.619 572.042 m
%ADOBeginSubsetFont: ZLABAA+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
/ZLABAA+SymbolMT 1 GetGlyphDirectory
136 <001C60D8A8C9B6F576EA647A5F5B4B03E057D234CA6EF495EDD6C7D9E25
1F5CFF7E640DCA0EF128784B6F46D5718CE96A40BF8B6C885C93EDF40B232673
206CBA1A9265A232EA408690F61A8CB3608BF793B236A031ACA166EEA0B8FD28
6E768EF7527900D0E9E1A0E7D01B6070AF6C4FB27383228DF50A2C932C5685BE
41172F666E6241FC2> |
!
end
end end
%ADOEndSubsetFont
/N14 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(\000\210) show
436.619 587.403 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(B.)
[13.3208 5.54844 ] pdfys
460.38 374.342 m
(-We call the combined circles of A and )
[12.1197 18.7832 11.1069 5.57242 9.988 11.1069 4.43356 4.43356 5.57242 5.55244 11.1069 
11.1069 5.57242 9.988 11.1069 16.6412 11.1069 4.43356 11.1069 11.1069 11.1069 5.57242 
9.988 4.43356 6.65119 9.988 4.43356 11.1069 9.988 5.57242 11.1069 5.55244 5.57242 
13.3248 5.57242 11.1069 11.1069 11.1069 5.57242 ] pdfys
484.38 352.262 m
(B \(that is, A and B and any place where )
[13.3148 5.57442 6.6412 5.54245 11.0969 11.0969 5.54245 5.57442 4.42357 9.97801 5.54245 
5.57442 13.3148 5.57442 11.0969 11.0969 11.0969 5.57442 13.3148 5.57442 11.0969 11.0969 
11.0969 5.57442 11.0969 11.0969 9.97801 5.57442 11.0969 4.42357 11.0969 9.97801 11.0969 
5.57442 14.4136 11.0969 11.0969 6.6412 11.0969 5.57442 ] pdfys
508.38 352.262 m
(they intersect\) the )
[5.53845 11.0929 11.0929 9.97402 5.55244 4.41958 11.0929 5.53845 11.0929 6.63721 9.97402 
11.0929 9.97402 5.53845 6.63721 5.55244 5.53845 11.0929 11.0929 5.55244 ] pdfys
508.38 516.422 m
/N10 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(union)
[12.2176 12.2176 5.56443 12.2176 12.2176 ] pdfys
508.38 576.362 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(of A and B. We )
[11.0869 5.53246 5.58241 13.3048 5.58241 11.0869 11.0869 11.0869 5.58241 13.3048 5.53246 
5.58241 18.8391 11.0869 5.58241 ] pdfys
532.38 352.262 m
(express this event as )
[11.1049 9.986 11.1049 6.6492 11.1049 9.986 9.986 5.52247 5.55044 11.1049 4.43157 
9.986 5.52247 11.1049 9.986 11.1049 11.1049 5.55044 5.52247 11.1049 9.986 5.52247 
] pdfys
532.38 545.463 m
/N10 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(A or B)
[14.4076 5.58241 12.1896 7.75439 5.58241 14.4076 ] pdfys
532.38 605.343 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(, which we )
[5.55843 5.58241 14.4296 11.1129 4.43956 9.994 11.1129 5.58241 14.4296 11.1129 5.58241 
] pdfys
556.619 352.262 m
(write as A)
[14.4216 6.6492 4.43157 5.55044 11.1049 5.58241 11.1049 9.986 5.58241 13.3228 ] pdfys
556.619 439.982 m
%ADOBeginSubsetFont: ZLABAA+SymbolMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.
/ZLABAA+SymbolMT 1 GetGlyphDirectory
137 <001C60D8A8C9B6F576A20CDC4DC75A2861DCCE61D5497CA2236835E594C
92B03ACCA3D5805C483C738415F2910367C32438582C0263DC91BA0B840B436B
68315909A9C5F5E097B6B9490E7EE432995F7FC097DF06A74BCDBC667CE27C43
B713333B5D464AEFBEDD2AFC28A513B7D22BD5F806F8482641BB2A417261FF1F
C95FD8A015C1996> |
!
end
end end
%ADOEndSubsetFont
/N14 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(\000\211) show
556.619 455.343 m
/N11 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(B.)
[13.3808 5.60838 ] pdfys
565.26 68.76 m
/N11 [0.0 16.02 -16.02 0.0 0.0 0.0] Tf
(Stained glass window, Cambridge)
[10.6662 4.43433 8.88789 3.53722 8.88789 8.88789 8.88789 4.44234 8.88789 3.53722 8.88789 
7.99078 7.99078 4.44234 11.5472 3.53722 8.88789 8.88789 8.88789 11.5472 4.43433 4.44234 
11.5472 8.88789 13.3253 8.88789 5.31532 3.53722 8.88789 8.88789 8.88789 ] pdfys
Q
/ZLABAA+SymbolMT /CIDFont _pdfUndefineResource
/ZLABAA+SymbolMT-Identity-H /Font _pdfUndefineResource
/N14 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font ArialMT
%%+ font Arial-BoldMT
%%EOF
