%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Acr88C5.tmp)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 21:49:54 09/25/07
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 160 128
%%HiResBoundingBox: 0.0 0.0 159.83 127.67
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2007-09-25T21:49:54-04:00</xap:CreateDate>
         <xap:ModifyDate>2007-09-25T21:49:54-04:00</xap:ModifyDate>
         <xap:MetadataDate>2007-09-25T21:49:54-04:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:339A693ED06BDC11AB3EAF44E3DA5452</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:339A693ED06BDC11AB3EAF44E3DA5452</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:26b15252-54a3-419f-a37a-26409c06c72e</stRef:instanceID>
            <stRef:documentID>uuid:62ff295f-e631-44eb-a290-bc921a8d6b5e</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 159.83 127.67 rectclip
q
0.0 0.0 m
159.83 0.0 l
159.83 127.67 l
0.0 127.67 l
h
W
n
q
159.83 0.0 0.0 127.67 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 333
/Height 266
/ImageMatrix [333.0 0.0 0.0 -266.0 0.0 266.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%13FN$4ICQ$k<jZ%Ls'b
%hB0]'GM)j&ePZh'GD/q'bh;q'bqGu'bqH%)B'M4)BKq@*ZcON,9nQ`-S-f"s1eUH
#QY859`kD?!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!;&u`9V4`&WB+S),"Z#e$,>%j
JkApc8-L+K;U#Pc)M!oa,?rt-/fL6:!<GbJT%43fJ<DL/90g%ZZh<X]o_1Eh(\Oh`
P2GE<rjRB?jEd0D?F//BrLgT_rXQ,>Ns"28dFh<jk4P=8e%n%'Z*#1:1@7;h,cj,3
YIG"CcGlm->RV(g^jd/ckI,LL2ql`o_n$#>DKDZN:LK;]HCV2/K@V)7VRl#-\1tXI
rN/9fSS-Mk^R@a#1&D7Q%/'rJ<JITPH7jC#kq;Kq/7itqal%CiZBr>*?ZUe(lQ$s<
ao%tBb:IlZk6'l,0V[a7\Y4udbn3-#P:8AMF1o[E-$SEHcpQRnKToE'BcFJ?`:BtC
`e#&RGF@l\\;$<"5%Pq8h&Tk%A!$&(m&SC6+_YA6GjD^S2]G$[f760b!E^s-F(8,)
rr=>cc/#Ao_Ff0V:[s\Q%/_jcG?!sY0]Dq2:XactoR<k[0eujIE1]_BC]=CZ/'3FC
fJe.K!^jU3KoE%RC%!1(59WTtqgq3h3U&b5HCb6q-I9'I1tq`[4qHiF?+3GlQlTY<
pojDth-77*-h=+F[VlqT\Z!XsW$E.h$7$iVW+@8".A9;0.&i)/-VT[=8L0HsOsqZ>
P`e<XPbdQ-_Fd^JaiBiA>rYLlJkB8O0GHc?!=MNX+q55X%2*ajRJOts`uh.fia\$R
+NLj(f$EgM53*8\I]q@BH9DJfL\llRQ+'i/5BMAikC$k+7o\dAEK`jF!i?X0mC_\n
rX-A7@*c@Eoa>&8T;/%UOi(["*_S:6-[Ub#&Ae!):'bH6fDDEUM=FD`bt]!h%b"cA
3q%0Pr<J`h)f2dk>p("0^7CEc0oGr#>OCrYFs4-FKGG#=;0DRK#-m6'%N>6X2ZYLW
L_7E9-gq?f?@th(OC7c3+bfWO2'%Qhg<HJ1_Ea2Ele,(a,M9e!]R,0lOpX+VG-2kk
`C8mjB!KXDi0fXQ5\oG5kG0:`*Ng#KGY-g9Ugge"h?YD*'dbZN6\H%'J>2crVX8$.
:<F=4=DX:kNdMG8-Zr08/KF/A#U5@Y_9i<sbpU6Bq'#m%0EXjt#L'!@\7#VK4T#n`
6Zd;+0dCk>NW;AQi.uQJ#Q<m9Zn<:`-b"QIc8Sb0*mnOO/?t^*Uki/iG]Q5DL;pNT
")<VZe&/ahI2hJO!8"7>F)cN/g<"m"LBRVW.!GBg`"5=r6L_Eg_X539"p&"2eZZ-$
4ZKba2g*cKq3TYsPNCkW+%U?;E:0>?.ZDMSOc8gAD\<=2S\YH'.O@g*5bb,)PNnP5
;,YL]P"8e[nkZ8`P"JVD-:pmo8eR+p,cE.$;^WV8.<#uO9GE8>$"VR8%2)W+>jp7H
^3XoDB#PnRg,/drGi/J@DH3tqXP[5bK>.p)h0WZqnL^q?qQIuMG!@'$a$070H]I)k
W?_;eEj'Q0a.5d`Vcc24]a@,NmN@MpT8/SK'Xr70)MNX2;Huf?rWj#cgZjO2Nh+P9
G71lJ_:QJNb55skNH:]mXn_Hb91$d,+jGNJ\9n@KDIn:Z[RopNd3!chr=N`pr+!ej
^A:L2J6VhI6RH?n?+88_]0]9-Q\?q<AV5*pfQ+%'N?Ql>8-;:-gAl%]9Fn'Rg,PI_
3t4;L`H,E4NWc:=a#Y<L'?E?E:1]obi@aO(d0-l]A-'`(SJ/QfCkr0ZfIHd$CF1n!
T*\8@6Lcfp8>.H*PJ,EMP)$T5\<`!=i2-m75p8Q7clsIT_"UDMD8*kPQooTs%E7&2
l?S'2lAkSY&I22)8@qI]Hp?8HR+Y>#plIQaX>TDs,"Iu1eSfN)r("q0B/g7?@/"pl
UdlHAYj\@4TC"nul9#(),E:JN46jno9;T?jK_=?V:_%Q!8GY\J5socI`\O6uhZ?dB
af#aNe:&eV%Y(q#5qjTR\F'K#)Fh=6Uo13g^%I..Ug+s(q"><bf/'=_I+P1Sj\qR7
13)-a]*,LE's?lfci@5ZJ;tF=oip`^]fP\EPPl!3*Q)#iO67$,,aA-eON:=8gLC?<
6#2.*4:5PZ;[?5u.O>f\P"?pqP"q02=@ubp8L5Y9QJWF.7o[0taWR447m1&Ec#e2n
S&O=3llP-<K^14\@X3U[FG42<VT0^c%XYZa\:P2>%[PoWjU/)HXo<1cHoN9@cN0i+
$!C6VlTJ:?PD&k'IF4fl3HL5]0.Y?5H+DP@qd$eR\n(LTKR#.fX^-<s/td3beqscL
%\Dj&j6*TR&5r7LJCNcnADek\XX;17**ch.6]RpJ;(B)DSKkB<.J=+hkp>-)hT*)M
K]2S/kVeV;;io/FX`3tUB]Sn;#58l?g]t8]nNRmdkbN-6JcpnlH`H&`eo#c\rQ%Q%
WGQQ^ZGHjX-@#(N9ku8MeU_3rdDSP@UW#mTA(e,h/WmUeaV3!B3mZL9i]Y)uK/"WA
#q:3LA.Vua8CUD,#X[1pSXd(QVj`g*/r>Q3@N_YT]3hMl+sd;Pb,1KJ=g"=n'<o$-
+S"TNl81HS&-4&?&38i_AG&N>q`'[*DK,M=<k0l=F$C5&#;6Q1)WHn-&\dH%DR*3"
2'p_`0!'6qOmNT&7\,"eo2M:4>$[t8O#S/er)R3Bff#C\FcUP$TXan]Q#_n=eLoY?
;#2]GDlI<m/8IV_-:FFe!kKpI!;L1UN6@g:-SR/X;tf5jlm",,FmlMG,F3@6O[JM0
HK,BddWXk/i''2=;J0./jAtDh9TQ%BT_orVomX1PqfP4)!1UNbD'VO7)GG2neP@ip
A`;.nltJ>h9u%b[S<"AhEe!V'R[:F:FcpqSqXVX2?,sLL4h;]W1<gh7_o^M?$^rV\
/o,t[_u^F[:9&ImYQj$-fB0>W1X7`.@<&C42:9,#C=diPm<j\P_>(4O141lB[k!b)
=iHU!UY#DeHA5[G',T9#`3l_%SPO^u:3gW*D^jJ^Bc9<pZ('[U%al`1U:i(ZYV:B2
8^`+%<ni&#oTQo*%T1nh$&JCNBSg<?a;$XOSBR(>8sFu6j"qRE/Q!t2f6`#i#k1h8
lQ#K9R/j:1hknC!Iue-)S6FYc@Bf@K\uA[sS,jUW'k*)9)i45'D],ub/9B!+#!7\'
"[0'=hQl<sdPB_KY?D<pdN>t_*3Q*&jZ(gsK99J=>[(]C*5XlidQ10&YH$O4QX!)n
p5[E<Uf8:dW0JXM-'"ri:C0?9=X<L/C._ruQIPe0<Bb/D=4Re+RelFu^r["ie+f"=
5O=cj-e'j-cJ/7tbC6bha6dBG1/<L^56X-[k=]ZFH@adb)AQ!U>K8H#_JS]iFboo7
'A'h0.pU9fg?T\$Xt:dr!7=KtXUhQ$AlWHK9G0/ajTG(U_4T1/Ut@>2:B\TY]QCg@
)b>BXDA#5Xr`&k1V.IBVeuHLMdp!p[XpZiqOeW=$6#:uIrTdOaI;*Kn/WZUmI@#Rl
(,Y758&!(3+-`pX,O3lS^8ibq<UMMj7YHqPLat,9mB+UM`ZLqoDkgG:1iG#GdFCki
Dd)ukk:rZ7T'.8!,"V+[W(:-@!W`FC1cgZ>GkSd0QOV\kgW#$bAI#qSf\.M[pF.$)
fmUT.F1",GU,T"km]j'F\Kf?0f4eW@5Vu9HSTXb*p"sI,g3@?,Uo!\cg].Ssa0HXu
mR`VA%Q^NnQ<rbT[DF&H2<8ur]h<e(0Xu#\_(/M5HOWY_V;uM*o%DeopE;AV*:%,p
G<2Z[mgKZ5`MR$8SD.F'ns7UR8n-s(gPkOd3(IP>Z%:q0+ER=NZA02,pI%TF0-i+G
R?*?k<'bZ5,jIaDrT\i-Q(L.1+"r];aD1PP\WQFgP_;>bkger90=&Jhb8>L':mq6c
QVZklca[&i['5-VQ5F:4l1g:_b%4d`lInV.22QBi"E&F=I4)VkMsH8iH?Ds$?m'dI
!"7sT>[W;GHrj&45(%_cQc$o8@O!6(b%,n539t'7b?]5Z@"^\kB.^<![QY]P3eLFV
eR5gW3gVPH!1'"C]"locR?6Uc4ZmeI^a72dMdq92C9H7`>_X$PZ&ZMo[5,/s06d1]
BrBgJEVeNBgPnqXqUP`5bFZkX)LIoHNP>S<jYGu?SnBBQREf$Z7a#0>"T[[&HQ>`r
f31r=)Tcst5W\*CMt(kUEO)c!CPV-oq/DIh!M2Ji9`%7;rK>c1/O&1m_eVip2m^FF
hf]<G'f5KW7e,`M%`>om,rRM5OH`<>)['h?m\^Sq@FL!rlET,O?DXLRa#`qSbl7YH
B;aC!W.u0%_t8t^aPqT4N::]"I<IB==V`aNUOJ_`p@aNi.g$sIp\;/qdPX/V?nS*E
?Q8c&n(5d(a03`:8(D#I!*U:dr>7bfak02;Fi.&3?tr1[D(YT[n^T^mrU&AfYjp?'
MXO4qmLi9V7_W;ObimgG=YN3bO@\iuQ$$n_/q:6%-[9-:MPjgl#LgB?\mpa5m&&Xf
p:9jU38MXt'GFTM6Zjc/k(WY5OMbLB8*9D*_DlUNBPZ_jl6.FYAk#]l6.E=eHbpo:
fpd,Pd.+,g/p4?:.uh7maEY?5\-DkQ8>1a(=hB:LM/efoocpR:RlU7%NO<9t\%k+"
8&\p5;U`"knN7u'bAj]X.kk-oJT#!+[044XPU_)/W&L\tqJujpmIq+r%1hI$!YAV8
:EOV2QdnWr*#nDtN_`_f9d[(E+.Vd!!!&"U0J_9A:nmjWldErphjW]u^9H13LYMI.
M:r0J$QgVZ20>='hme67^bkK\_@pLB7oDVDA<%&QrJtRiX,P)9%<K0A'C_5NgF\fF
3T>2ZMhAe1,HM;1f&o$55O(g:rO:98mJA]LRJ3ZZnI)KQY\Eg7p'#8<]7-r*=0s]f
_VPYl#Os)tIo\U<Q^>8%_BsZn_/hGDFf]ZN0-33.r`(l>ogZL;H$c(Fk!1"3#l@Kt
_=fD8*WH*UC]8#*\.IGN!9-S+0W+<=fFlWUX:B13F/Rfu/F#B)d2nt`^]Z1aO'<%H
fBjV2CeAWNO'b0L'CU1WR2n'gUf1l2/pm$eL<7e&_f+HYX9LXKEGlbN"5-e]fbS\<
2^6]9CjW:+SNra*+7r-(K)fD;4'_.`?q=4+Ll?!S[_?ID:OB2TgV*'1Bfa&tMCPap
g>`EEItA>9.NY7&OCgThRrL#+qFT<;M;aE!hd&[P!'#FL%OMh!bcL5EYo4><f\sV5
UTm&O;^SrlDeAG.&lT]7%Mjf>F"/eehHV;Dkm?0bg+!O`C#Rnp6o$'ap6'nT$"VUg
J+JZLC73=h0:&"+k_K[[)Ul8Wpls+(Y'`<phm+Y9\*k9+43!^?NhKs!b'Y(B+g'52
Ok[ODB&n7`do3+C!1r0(bMoP\ia87<gh_/#^"nHoe<SO5`W#pnbEIVY,L%<F52"j,
)Mi)P1XoM@3flu=C%2c@l`8BS/3I)j#%cCjNI:3L[GRcgj(Ge*p6M)JpWINU]&LWF
g]m%6k8*Q0.lH19CLG5)p=@U22q.t\cYEV0ILoCeF"Us=Uc6YMZ+CM'G.tlWb3+&a
@U.M>QTU*gjNNApr'-o>OeC#+n:3S]-AZ/IWeO@)=uTW/4*-FU\nrZf-!o2@[+ZKN
Ya5GraPH-A>j:U7Kme1^QK1,@APOD%mO`A)pGpT5_rRReFBN[Ef%"QW0)J,7VDXER
pGaQ8f623T$Sq"Hk//dU]"+H&-72"I:AQJTCMJ!'dLCB-XpoK%k]iKiWEi4t[!GF]
2VAjNh+N;=D($Veg>$GGZ<BMLBc?7q#k""8>hN[Xhd!P%rr>fg^fj6h)cnn>/u$rP
_F%*HJidu3]#L7a;6o@ep,HuqNIbRF&-ob@8b6'?@is36\V:PFgTeU9[%6*-XfqN1
ci)Ia3$rlio/.IM-9b_D]<A/Bbml/ShC7s]ZQb.V_s[SW6uroO'*.NO9(-u\Zat$g
a0[VB+%b0SkgE6fXb+]_iouP#F^*lj&!t30WCEp(6>)+6\4QLDigb)MO,2ToNK/)i
7kteW9;%G;_;WP%cYO6NGq'6&_(KeWSng?5!Gu^ud.39c=p]qmE?DmRS<l4$[@s7,
,J'.>RYRqOd-<!i>nXhmgh#J1k<m*0(HNHE]GD;fh/eN2kb#ChU"-YiYW+['nV!0"
h!inHIZ5!QbkT%ingU_G"G>%DKg!9?LIl+]Ih`c/ZI%MV,=q;q%q5,iWn6LkL?IdX
dPcJ4.pFg5d7[dq-Z_.b0E<.LFBfVVCT,?!QYgg0Es'%0&O/EFWlo@egi>2+T75f$
YAl*@qOh\!P^r$&r>G+?88HW.l<des]J/:LhYk51T'sFu$Du^^4[UF@!gZ!U\=Gq`
;ph#]YVo@>=FS)sgDU'UnV(ZT@^".*lD;J?J52__MHM\,a^,Q1i#\$X=C_;/F/rs-
Z5i%&LJQp:nU@Z`\i4N1e8aR%AH#Sr3p0E6(^2)hOmR1V5?Tdj9.Of1dXA`9K27A4
SfcA#.3Iu@Ih^DDRWiM^^rC&1<&'j?./ku_lJm2_9th]?IsU:IdJgB523m8db[gU[
]1D\uXFJJ"DVt/Y@O#RLn)6LdQ$RD@*h^kEiq6@YlRdUQ=04Gaa-tcW-p+>9+7O.E
Q'3qsM*<E.QB$qld]g8>[XJL*FK@X:<[Y,3lL?9G4>i.=huZ_#VM""/E08[&/G:g$
g'8N&$A0mD,[,=G>"S2^oM"7bnf7CQH\msVm%Wi[g.-VJd6cEgZiJtD'(6Cn(,b/i
ELj=HM2kQ\rrAhd21s\8'AW`Pg@mE/&2ZF^cA=!_b/6'B<j7c/&uYGnG*<Z(m59Si
\uZBW7cMcTlj2!F'uP-,H_qe3i][Yt*VF`1=uPpMV+.J,"oeQmNMF(kDG+1tX%QnI
2+GU^V7$F1Ifbdp1:D)L7Mlg$LR3La<oA23:=*Hpjug8m232Mi?$!H]8L7g+??.YV
3d0d,3$;uX.p(ZD$^\eQ)+Yi^(:,mi*fq=Vhd)W?jPV(*C8lAFrg8%TF;l8lDS>h;
_/2B+5+Rc.G1c+sofo!WU:BVY%t;U519[rm=a"@bf4@<Qa0[Z'_>Cfg_J2e&]^D7^
_3)/+*d`G[Edu+n/X)]sh=8Pp)!a`[3J$HR@hM1@@QFP@Q&?K>VfVY^@_/gMbd$4j
q69S5[NrUX7!U;"UF*9@Dl2N0h![P2/.Fh6i_GO/+F4e2^Hre/BI$P]^M?MX@nm_,
37c\n?17DY$oNtG=)4R8fIV28D9&?#HE:teH'7RQQaCcN+%O'oT[XlKGl(mfD3EfX
rTS,9<NF3>*Rlg5aOTZnKL_MlLW0pul5#$GRg?*6fNK3UNd3b_,c&ZW>Subi1cu4_
%P2RZ?3rF))8@Fr-traohmc40j#c7/6/1rT0-U&"KTL"%%b,nBM*H<mNp`aPdoWA:
!P@"BfjfAFh(X9`.%pcS3;PR65T]ZGjL^rmVj/(S<SOJrN-#U_D/p`g%\Fg-2V)ZJ
3*+7licm6SrTH9aJrcqO\'oWVn2,$cNG%"Lj[:"0NP_9(^t/'5-)NZN:F?[q[[>\&
9l>$Kc<rjr<-kZ@AnS,M&$Ph"m-NmWG(feD^6t-iN%;0Pjb=Z`YR_3@(KL#%kIqt[
F1CPb7RW;;A/%Ja8I\$o(T)50r`%)uYY4ZYnOgFl:d`F$O+:/M+(L5COQ'*<BPWX6
:PWN([M-'F^bLlPqVDMqOOp&=F8j)^qJJ>T,EEA'7q4q"#X2PQ,UTYGq>^VEC8U:^
Y`EmNOhauPjob!eNAU/S<_]di8D?7BTg:,cX/&BH]Z;Z\gVOYqJ#L9LNK0(=8*ht@
o)s'5LrZ]4H$?pd>s/*8.2t%Fa0h3l="o6Zlrn[?4b$PE0k1F4U-la$3=D*nCi%aP
`RES'[jbrnaCTPS+(Ns?#nu(<#s_.&&"'e!=ZA(RgrJX7*g=4`CYV/X]3jQTb\iE"
mqjUh)X`RihQY$dqSSM0WFa!iN"<EK/c)$1O?ZpiF,,F353)nj2N1/Q1*0hJr[thZ
[na"@DlNfuOo/30^:/4\S68_F*SD%q:Iio.;')d]^2!=J;gMY.@6ZU:%i)hY!+=gI
rGc4U@b0idGU,XHnPt)%?>ONV3M44[0#FfmSM$juLWrs"O+FcYU*2-$h&cL+IP%9n
:C9N"aK[HIqpeH9keaunoPW:AXWC*0eKj'`#)O\95k35)^2($`b;A&0n!QVAK=auB
#.*JBL/XOY%jk`=K.B9D=_h3s`JnqN%kr.oM-:\9BRQ"G"'3^\i<$Fl)'g6N#WeL`
PO!RRS`Vd7_)!ULY&deP89FX&PSk">jL(,Dn&Hoq"br]$B^dm=3UWUmXbF^"<eD[]
!;q_,\qmH#dj<"Bgi>77QrZ4B6^d,8_oq))kgZH9@t20DK%WmQ*hqlHCGSoG"+fD*
+D9S$3<OHfp1npop$c*2qhpC,]5d:(O\6UNEq1/T?odX"7hPic3BoC7L]/hlQR=^R
SgOpO'Vg]KFl#TdIk(pt3BBQC=lneX,R3NP21l-@]?M.ii1"4'a#/ec)bD8Q5J,-Q
XB3chW:jM4Qn-_4%$pnnS\MbdI?`1&Bs?312T[d1TSXUql-GGckPd3YEr;GQ:PD>=
XA3"V"u/4;nJ<Ws-Xlcu@Zcum:SQIi7RkPSpD8S-J<C`S@Cf#*.+e0OL)bE#)6%+j
,QX[#TKl0!Bg/IHEIR;VV51YSkkk8jo^QtrA(+S`joF,lhf'j3ZJn(S>gk_gLs!J-
>$XtuQUqAKEW"]#*-.lm9sVWa?jgPIUr\:A52nmW`4lF6)Ts.=6#Z?HA.n'>W-ml#
FU$bgFIN.]7A8>=kDdC;4f/QY@r&;Rf$MI+l"SX$8M6(#]7PdWdTrPhpB17=LBrpp
JHo'1XIIq`^"1]MpPmGk1kpO0NphQMDi2$0S5sJ/D2lre-XOaVP-#aLg!$qmDY9I>
LHBCHq$0HE)_kW&]gqrk5=pnG4A;Zf04Xr->k8"'gg1"FH>'-P?k18P_6ADP7?6+I
^ir!g<1q[T.rEX;mbH/T+i@X%k_Wn@*]jia)#H[*61nL?GU$,l7+PL6lMW8D&g.eS
F,q89E$2):VM@-1IBO2T)(cb?FcqoXrhkZSZkHYp2"#X9JHUeZZ0#J,inA@W2I>4E
/Uj;RcXZPbNm"-g+'F[3%L'#jhLBln>RZ4g3fY*Bf8AmCp5g?INl6)Nnm*?Q3J_a$
1AipgYpdfLNn`kLQFnJXG1Z,k1Im+TO/oF%)Zs?bbipmY>2+2Q-bO2po]pL7`bPt-
jp5pFj&<FJ+Km\t_@:G4n5qfu$1bX4@E8_?3>h#iCihL[88:7)U3M25X%iA^\<f%,
ppBee;$58M*p6O>Mh*u%22FQNl%eRfb)%OU3('(j4`s]q+-HX0CP34:qXTKKQAn\X
jG*D,!%]BW^LWSHe?Cd;mc.#6:T]\\CP%$N1>8:"lN&8f%\6Q;dS/9g]T3p),c!r^
Cba8%ScLlJ'"o+HO6J\H54)!9S+enF"jEjc/hf]/T*='L9I+^L[-JJlmZ\FS[@e^#
-o@oV<6.Cf;$olDE1JCM7$NY/3D?A5KTqJ=QW"%Fj8o7>hiV/aYB,+]3JW@k55c$k
jUT=BQA6Q'RUt9BQ(q&l[@<V5XW(isO,hm\TK.WJjD6D&#Ej3BQ9-X-?XY743Bud@
.SGe9DPbW70u?uFCl53"Df+Ar2,9Ii=SlVLUZd*t.b,?j`Wq6Nk)u!R89OPgQTNZ;
T^Qk`N:7=_Z%$6FqOX,-4<;%$V`[c5[kdM-@;1(bj@MNKieQfW#IoN$pDuspOSI-\
nEb27KZ(_tMPhEPOfK^EgD_1A-]Tu@>4hG-JZ`QO-,Ii\P'8n\#(e[8']IYsibq%n
-hN,"<XE1;L5A$@lDneZ]F&IpND$cLqd%aW_G6t9GE1kT<On-2RHB>do1p`eUe(=k
LX7Z47!8PgT95IGDQ=f8W\qMflZS%(hE,=^_$gp2qJ)VUMo<-8bF%apm:uhS<TN!.
g=V$>:DspGSkY3PdCldd)]pdA"LE1)>4\S5LAmUdG1X79nK@N33LFo>>F=.0%1`lP
dc99sAG>Gbbi.h'fhHB;/sBd2DQkHMPLl:_%?;0&k7U<3^=MPd>;2<ld0d/2)j+Gr
o)A^HG1+Dsn<9T<`obB[O1"&@9Y@mJ$.a3M:W41D&4%A&>PEV-[nn<#fde\kHTahR
_/L;SIXq1A@/QuRfR)?7^GKj@[DddR4Qh^X.GF&;!S-3AGrJm"/KB*IM,Rt=/7Yc(
+gPCgoW9GtL?T"+lqDuqgLt]:i3tu/&[.7+WCr0(;d.5i_UAKIJ0,B\CP!c^`-L0O
VY3L5ghW7'Hb$4CD&@+6Wo!IX5n7jQC%>u#[CZ13ARsFdSnb[/2inj^)LKo9"X]q1
6)O%8Mo0%?RL:0c#I5)0\sX>"4?Q.WPHm(5+,VR^^ELiQ[^He7r?[U`)P;3RVkpgZ
c`YlWWc8MfX9X8G)EB*I+=e^@kIfC1%u6.[TAB';3i4"Q0t0urrr>U7DetS,k;;_f
4=qB0f'qu3'uYE9fR;n0AccV8MJN:'ZXcU;J4G/hEkK[m;a*>=c`8%eFsEqL&fMHV
,!^e2j`0i36c5[?Ha*!*M>2&!na``lVV=t)&E#Eu)M@NZHJ_J59<r=P+#<]I"@;G`
8)GgLN2psBf+G*91c+/'=&7(]Qp9UI.QP4B7NBX#1'YbPQqL0HdT"hWNYufZ=M5C=
*8q%@DZi#P@mM.V]0ZuKFtR1pTDBr/%O)3+1d1gFd&>OOKAP;EQ-8b=[Vf"e`Le$g
1!op:1aBps,9\4<g*#!M=Y;EI60+8&nZ0+/+s;5aPt\5Z\5.Uf.u7Wg<0h\Q5uApA
"]bP]qY2-92R^%r(f.R<PhT<ogAmQLFn8NK`U2O_G7ZkL66!20NQihinE"hc;k(+f
YQH$#rrC3P$H%hS@,0Co`/QtBgO38+d-1+&Fo"RV,bS$UL8#2(-DIm_1E7bKKW,8L
9;bGsk`V'iL.6uQ%IsXTP_I'[kjR%&kUGG9[4SF;ghGJ*6;MJmr^7!rcZlN5BcmN2
COKg3N;imb1r4MWA&PbA5J^g9+'=:nhG7u!M1UVS%'L_0D.Sf6F9!2LHQg,TR^TN8
K?SN\82&&`O.+cF*rLIJX)>2VLT:@SCKr\:L\f.cC,[)VF5L@*CTeA7l5%.ag`<b8
,PWU.osdYG%IAI>.kGZmCIi8VItC9]ZYPD:%L8AQTGSaE'((#O,#PD#joL+/BeDWE
OO9b_4VC[s*lj":,a1I];Dl,!keYXbg;k4)-.*>c'>dc<HX+@2cq3Se)RhTMp4?a8
GbHmpV9Ju^+Ci"0D'#+3kTW^rVm<>ZkB_$-#+@qR,c7WXX9kFhKA5IKH#9$U-d1Q4
Nm)\[>4;nihp5jfg0Pa`4:*'WTd6bE!Os1IX;2?l;;iOX.k]UZ>7FIf5$bu,J<H@r
ERgKknfNu/L=h7pVo5@>(!_HQ9k-ZN_l3L*"Kb@#W=Vh>OZ9o4*D@Ns@i=7[oF6W^
PeA"[6ueql>Sk%h0%p>g1CAKc)$SIAfDS<S=0pUH1ZFh,FEu4D'U$[Bn-Es\4LtR@
B&n'8>6CKb$Z%U#In!s1Y_"_V230&Zco-slKbh2*SV'5\_,Kp;mkMpTc^2^mPJ(fd
0sOq2M.f>j^.'^,YM!u,Qm5F;_$P7%(Aj]`k!8E'q]u\b5*K+#Et&*e"F,/(\dUgn
\tB7F?]-'*-q^6fTa-A?/4Z#X8SR27l!jNEMsho3hU:YOdO2qn3Ef,X^^C/51\(!8
i9J=Q^jR*l;Dm+XmNuJIH^`5?SG=rH7hD3#\0J4hLuA>>V6\+l+d2:;fe`*Rd)q.L
c\3.KVMK4:^7;-oZ^:+c:-";5.7E3E;I&H=lj!pH0IucM.AunWd!d[Y>Y=;,l87Oe
mbZl-n/@l^$bp+8UaKV-AHdn7781R[;/21a9D;2K6?J<JW&YEM`BhTp"4/)Qojtr?
i?YoT=_MrF-MDjK9`1IK5F$8Sf5B=`CQGm8JC@BR]BlQPD/ZE5>2ciLMW"&pFs]YF
j;/Spe(fGS,S4)+b/nJ.)[BG[aAr;Ci)J;58V&@ff`VO7TJqBnG1[_aJck(R3eWaR
2)[VE.qb)]Jo%F:3)onXG@7K+F5/[+mFOq$4;6-HA(<2_j5a*9+R;CQ-<bk*M,Fb%
EFTL9'AN"CID2SPcoX2*'t1c'&HMFn8M',`<!t"f^]b>FiJub[LSVht!^YGK&I<=K
g3;45_af;E#m_j3*MeZZfB.a01;L`-o&HHcPed?Uj&+a+m=h@B;5ZSa.;+r(jK`#<
:cne0>0"!r@r%Mn-cE$DHaa(5g..cSV!$eX+F*51!_I3S)$CIJ61G<'ZrYF:,S'hS
"\RRJYX"U(;N4&8k!9$sW,P$r``&B<ZYXk7[jA3R9H"Ci#r/<P^#X#nO-5`(l.CEs
lACrih8<%lnK)D3qa<<>[\oKk5*JHkaqC_i*BHMX=BOfOT\L'!b'g@Ol;"Xj?oCVr
>J=E.f?FH'!P=+u0Zl["l1_&p@uRZ^f#r0$q4slHC`_0!IS&8\m1mB5po;sBd3Qg#
VQ)1q_@4bDUo*JAA:iEK17>aI[K/$EL4KN2HdB4h#=&m;G_Q2W"/HWqMe:S,O:Qb%
^*jc$>5b/!4.'%glQ5#\4h`"aJHe$b#_&[H&OWPj3t/_Qq//9JD'4*aa8;38^p1VU
i>b%Mc,(Q:2ETiGO5RJ!P#A\*W(dQ"#pGE";c!g27$P2W$%dR<;\BET#_b["P_I0o
"_#8ET%'"QYV'_W%PH2b`\r<(rr=^H=&EWbZh#VWeNTmfCOl`QP$S=_lQtU)m`;L%
bFsoOmO.e13LGR3a0EKd1^Cr?$D:U?XrC-bpI[tOBkFN9P681c4g$@@e"GWE"NJ%j
%(fWi9[Af!(=^?r:iGlp!_QBG).Ot]]>SKZQ$*LhdaIpZ3dqC-Orb'Lp+b8d+-fF*
LGfP@3/nPL/%nhm5mMoNMH2\n)[h)j9R.boY%H7OBRb63M_&p8+hN)lJ(g'R[anW+
4$kqqTqDJShU2^`1M\0B2Md@>UF^26\lqB/KTqnaQAtH2P>ntRonTpAD^Ka09>_;(
j9K`i8p+Z\+BUYj247#fQ8PiHnd%@02$G,rmaqPYJaAsHrr<7q(kl4];X[GpF/O,A
g:k18"380>Y2]/I9qida<l_^1K0hTg:*/6GB3tT<,a?QT4!i13^PWj^IA]Hb.CI\c
QFN.2T)o]&E:'_^P*n2(_HM3R;@Id_9_]cs]rhO7NtjQ6cMF?5_/>ot&i[=62/hPR
[qk$O"s@g4^OdDl?I9j65qRgNg'*!/[m1K4??1/gb(X`IM)2&KM-ZddH].qh+#K5!
f.hr2U#:EHP7;&TXF[()4;)dRH('[(WBV*6CMXcQ:D*C8;[5E>jif!<R-3q'B;IHX
4I/l7V:+u5Jb6\U'jl#J"@74(pK]`.Ssf:GF-CLNAAKPbDs%'"H:iC]!!!4RBEGKa
&8N;I.`4Br;FZ=9L<t_h6Qu1Q#uMZk"I-KHab"W!Yu)aV;G9DL7c7+7&]tc=8nm#9
<BHST?J1TAeoM-H_!9Q:C9C^9N;=p?GV3^_jf^QS&YU5sEH;m#=2ET2O\h7bg-!,1
,s:Y\?MJNp[nrmcG;9TQGu&nYj(B%GRN#OH)inL%e%/.M93]SfYnJ*lMX/u%,=1G.
O/][c5Ddu\-KD^O4:P!Y56R4ARkJR[,l$j?r=`<;j@o;Ad,ml-+G6j)I[f1#5=f`j
;Z!L)/:80?.';ED+:et'D?[h>-=do>I>tARXu532$;,;RI^99=;Lq(6_G=^gV=,VJ
]JQ2bRY_hc9+6X+&`=:#2EfX%bWHK1$;AENU<R1I3c/YEIH@5raJ937-HAUDdG(ot
8Jq0/rgR(Y#*[b>$>\2tj3!8u)(s]>l0kGG&SNk0k!s8Qgle,O*h2,\,YIMJaW,OM
>/iOmXakQA-IrDHaq>%ngDKD^?k_2VOfl^3coD%*?HOV"\Zqj#`D4Ub!8@()**qAG
U2>s,9=XnW,3Mqik=pC/8=el_2=XAo:8-Beo*?dX\b:RQ61>j@D+FPfMUqV[4<8N<
AYHsYW_-_f=@$BN7\V1,l9;9CK&a=G'&FJigE&NRjVF::cH'l\+A((HfQa%%,r`D2
9Q"H5[I*o57U=kmqENiJg7.Y50QAV^V6n`/D^=mFjHY.D1eHULK[mINJG2mA!fG?^
R/i$W5`SfuW$u`cocOr61Hm8(m#%2?';c)_;NsuRKd=bhN)$AU+qUJ8.R;tPX4Y4j
3MI'k`0BFgc:Xj[H:0?3C[tH-X$VE09<%R!f:/`\hH\I_bUi'bC1%/GHP>>Klfsm?
H/1Stp'L8-pEZXhbC.!/h4d"l:_l]99K,6U6Ep0m5Xu`-KBY:<bRPl'8mRHu]:HuJ
4?b4;hTp`K8jXBN5VchnP),;Iqha5TUn46+Ai1W%#-..C`p,Xa[E^B-J/^6(Ms:hI
)Z^*dFZ)7s$j";@=_k$NQBSglHsjsXjqA3YM.tBt;%7$k/p%,l.4JY0pJ""f#B38A
&MA?lFY5.OqHu1Y:++tpCM\5)BomH]HR,FNXFmSYl9*30Fr0QH5jX>-AYX&6ro@EU
W%MtCYXqJtfjbFS%u8D'jjjO%VS)^O/3=5M!d'hr3:7#=jAJo834K%=m2X/-WRl)9
*[Wim"*:Ja!@+mg;5D8FU_K!I0,m11*-m&KfllnnrnbL'gMJNM%<if[KD>S*459+F
i]IcM>?Rl5J^9@6[FI:Oi(6(bpnD\O@=Fl0<%=q%.e)"\Sd[jdieRkQ<E<;cf"nr<
kgo>I'"VtIe(KLU#W=bG\.2=/+a!.Db\"rj=FQJ6!.aWDo[fg092d#LVD'E">-c03
P*]ZF+:4Le0T))/LQZ*.T2:];94%NA';VH-kleEQ"YPsZjI%;F;]c`"aXMcSnPCgb
'SR/^;H$`bR8pAh<VJ?Wlj0T2\r@JRoOr>Np/<H#f^h-LVjYZF'=\K@]Q1=GBrm&s
]0SK\X!8NPM_c^p)3C+4`-"N3Oh4O3"Vri[)p%`,C><H&8/!%l+I8Du%GQ#c7YiL-
ek"/Un^TgmLES$.cM$W+Y2TRSBN'%*Wi%tA-\3@k8l_N"mg^BNhKp`t!K8>CBQYQ8
WAqL[4:cV@#-%%__dp,n61HBQ&8Cu*S&mgNHKCfSlPpW[_uN8ddpL1j*FUR98T<&#
PHQDaYZu@'GtuDkB?F4t3&SW=?]PK:g.72.T+Vc7SS9nUY]]c>"L[(D%9-Zfi0KO2
@&:E]XN-0Z$;"O$Fdjq(%cdb_h2Wb.!^Wt$itJ?\<Z>g*BFi_5N=r'l=>ZXd++th=
do4*BF<d/R=Ot.0@r^E=5F#EIVm4PYY\lWF^1e`*)",Nh\(b86Skm1>@H(?e6Yd:o
kODHj`fA57N-&c,;+eN%H6lQ@eTL)=Pf?$4C2hK&0I)gHYR/0c'??P6=:XTUk*L[>
i0'CZkp0)'l"Z=-3_E[5FHKJC-VAJH9.5n"nP#+5(<V8tif+9kTd;SR>j/6A8;2H!
%+co,a1E6c$AJ81=::jO!6VEU/<1?1alHn%U<U:^bqdrWa`]UNcXiZ0J:%s*>KPMK
@=fa7$Zme$_jrH0\jKcjr2Y;lV]"H*jBrWHM*dD>n]`lYNC5_@HjV1m<cmG"ZO-;f
CF-^t#S)$+>-c"TZ[b9V$7]q!;g.P[#:2Zqg[B$4Ln=iFrBmONLGl&k!n'<u>SIE>
bT,#5q7HOP9fa%kl8[KBbX]c7W,9rmT5pY&6T*nBV-"hnrrC.E-<lhS7;SR?D#XLc
&s-%6C^8``q07:LR`^8,:R8#WFl_6JSpgc;aK<pE9G`&gau"i!J`[eZiMs4R-Ks:R
n#EdVJn/Q%naJLlPq(LTpm_W;Bi0^@@9TE6a^2"^"H_61)ETIW;]V!'6mK*l_'H6r
?m7J.9k8EF!@998'7cnc+Jkbo"JQOZ,q18B!.%4OP*D,$b">e^Td5lJ'7:Ib;^/%`
SKNNM&s@@L;Gtl+'`F1d9OTNPqkTCB('PLU.&3#h;cWGl3ZqR[%qVE.IU=pnj4i%,
G#WACqnG"1LZja0h>NSrLQK-A\FA$<mXnr?@JcC/n*GGKS]CL^FB5RHrdf#D(f68Y
^\88o]B=[pe42a]^1hmnl?Ho_$d$qSmT+-"^MiP*foQ!X,C=nuQAY>tXZZm(B551W
73e,$J:D(iLu7RsORc>6:J2.V(!?#5@mt[Xfi.;6W#JQK1DgVCXen&`anu]B0jH.3
_O4-XJl[Hs-Vg"=Pd04?8^^1&iA,N2_FdrRS0nTAA>)"Xrjj5KIRMPQG>8&#.KA'~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
