kable_styling(bootstrap_options = c("striped", "hover")) %>%
group_rows("Thursday September 6", 1, 8) %>%
group_rows("Monday September 10", 10, 13) %>%
group_rows("Wednesday September 12", 15, 16) %>%
group_rows("Thursday September 13", 17, 18) %>%
group_rows("Monday September 17", 19, 20)
df %>% kable(col.names = c("Agenda")) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
group_rows("Thursday September 6", 1, 8) %>%
group_rows("Monday September 10", 10, 13) %>%
group_rows("Wednesday September 12", 15, 16) %>%
group_rows("Thursday September 13", 17, 18)
df <- as.data.frame(rbind(
# September 6 -----------------------------
c("[1. Introduction to EPIB607](https://docs.google.com/presentation/d/15c0YIS2KJXFzTKgFfQ_xDjTAcvPyQb8JhSLGvsEHJ6o/edit?usp=sharing)"),
c( "[2. Course Website](https://sahirbhatnagar.com/EPIB607/)"),
c( "[3. Teaching Philosophy](https://sahirbhatnagar.com/EPIB607/course-information.html#teaching-strategy)"),
c( "[4. Video: What is Statistics?](https://www.learner.org/courses/againstallodds/unitpages/unit01.html)"),
c( "[5. Introduction to DALITE](https://mydalite.org/en/live/signup/form/NTc4)"),
c( "[6. Review of A1 and DALITE Q1](https://sahirbhatnagar.com/EPIB607/assignments.html)"),
c( "[7. Live Poll](http://etc.ch/tfZA)"),
c( "[8. Terms and Concepts group exercise](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
c( " "),
# September 10 -----------------
c( "[1. McGill VPN](http://kb.mcgill.ca/kb/?ArticleId=1212&source=article&c=12&cid=2#tab:homeTab:crumb:8:artId:1212:src:article)"),
c( "[2. Terms and Concepts Review](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
# c( "[3. Live Poll Review](http://etc.ch/tfZA)"),
c( "[3. R Markdown Presentation](https://prezi.com/dvmgx17e_was/reproducible/?utm_campaign=share&utm_medium=copy)"),
c(" [4. Introduction to the `mosaic` package](https://cran.r-project.org/package=mosaic)"),
c( " "),
# September 12 -----------------
c("[1. DALITE Q1 due by 5pm](https://github.com/sahirbhatnagar/EPIB607/raw/master/dalite/001_hist_mean/001-hist-mean.pdf)"),
c( " "),
# September 13 -----------------
c("1. Boxplots, Histograms, Means, Medians, Standard Deviations"),
c( " "),
# September 17 -----------------
c("1. gsdg"),
c(" ")
))
df %>% kable(col.names = c("Agenda")) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
group_rows("Thursday September 6", 1, 8) %>%
group_rows("Monday September 10", 10, 13) %>%
group_rows("Wednesday September 12", 15, 16) %>%
group_rows("Thursday September 13", 17, 18) %>%
group_rows("Monday September 17", 19, 20)
df <- as.data.frame(rbind(
# September 6 -----------------------------
c("[1. Introduction to EPIB607](https://docs.google.com/presentation/d/15c0YIS2KJXFzTKgFfQ_xDjTAcvPyQb8JhSLGvsEHJ6o/edit?usp=sharing)"),
c( "[2. Course Website](https://sahirbhatnagar.com/EPIB607/)"),
c( "[3. Teaching Philosophy](https://sahirbhatnagar.com/EPIB607/course-information.html#teaching-strategy)"),
c( "[4. Video: What is Statistics?](https://www.learner.org/courses/againstallodds/unitpages/unit01.html)"),
c( "[5. Introduction to DALITE](https://mydalite.org/en/live/signup/form/NTc4)"),
c( "[6. Review of A1 and DALITE Q1](https://sahirbhatnagar.com/EPIB607/assignments.html)"),
c( "[7. Live Poll](http://etc.ch/tfZA)"),
c( "[8. Terms and Concepts group exercise](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
c( " "),
# September 10 -----------------
c( "[1. McGill VPN](http://kb.mcgill.ca/kb/?ArticleId=1212&source=article&c=12&cid=2#tab:homeTab:crumb:8:artId:1212:src:article)"),
c( "[2. Terms and Concepts Review](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
# c( "[3. Live Poll Review](http://etc.ch/tfZA)"),
c( "[3. R Markdown Presentation](https://prezi.com/dvmgx17e_was/reproducible/?utm_campaign=share&utm_medium=copy)"),
c(" [4. Introduction to the `mosaic` package](https://cran.r-project.org/package=mosaic)"),
c( " "),
# September 12 -----------------
c("[1. DALITE Q1 due by 5pm](https://github.com/sahirbhatnagar/EPIB607/raw/master/dalite/001_hist_mean/001-hist-mean.pdf)"),
c( " "),
# September 13 -----------------
c("1. Boxplots, Histograms, Means, Medians, Standard Deviations"),
c( " "),
# September 17 -----------------
c("1. gsdg"),
c(" ")
))
df %>% kable(col.names = c("Agenda")) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
group_rows("Thursday September 6", 1, 8) %>%
group_rows("Monday September 10", 10, 13) %>%
group_rows("Wednesday September 12", 15, 16) %>%
group_rows("Thursday September 13", 17, 18) %>%
group_rows("Monday September 17", 19, 20)
df <- as.data.frame(rbind(
# September 6 -----------------------------
c("[1. Introduction to EPIB607](https://docs.google.com/presentation/d/15c0YIS2KJXFzTKgFfQ_xDjTAcvPyQb8JhSLGvsEHJ6o/edit?usp=sharing)"),
c( "[2. Course Website](https://sahirbhatnagar.com/EPIB607/)"),
c( "[3. Teaching Philosophy](https://sahirbhatnagar.com/EPIB607/course-information.html#teaching-strategy)"),
c( "[4. Video: What is Statistics?](https://www.learner.org/courses/againstallodds/unitpages/unit01.html)"),
c( "[5. Introduction to DALITE](https://mydalite.org/en/live/signup/form/NTc4)"),
c( "[6. Review of A1 and DALITE Q1](https://sahirbhatnagar.com/EPIB607/assignments.html)"),
c( "[7. Live Poll](http://etc.ch/tfZA)"),
c( "[8. Terms and Concepts group exercise](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
c( " "),
# September 10 -----------------
c( "[1. McGill VPN](http://kb.mcgill.ca/kb/?ArticleId=1212&source=article&c=12&cid=2#tab:homeTab:crumb:8:artId:1212:src:article)"),
c( "[2. Terms and Concepts Review](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
# c( "[3. Live Poll Review](http://etc.ch/tfZA)"),
c( "[3. R Markdown Presentation](https://prezi.com/dvmgx17e_was/reproducible/?utm_campaign=share&utm_medium=copy)"),
c(" [4. Introduction to the `mosaic` package](https://cran.r-project.org/package=mosaic)"),
c( " "),
# September 12 -----------------
c("[1. DALITE Q1 due by 5pm](https://github.com/sahirbhatnagar/EPIB607/raw/master/dalite/001_hist_mean/001-hist-mean.pdf)"),
c( " "),
# September 13 -----------------
c("1. Boxplots, Histograms, Means, Medians, Standard Deviations"),
c( " "),
# September 17 -----------------
c("1. gsdg"),
c(" ")
))
df %>% kable(col.names = c("Agenda")) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
group_rows("Thursday September 6", 1, 8) %>%
group_rows("Monday September 10", 10, 13) %>%
group_rows("Wednesday September 12", 15, 16) %>%
group_rows("Thursday September 13", 17, 19) %>%
group_rows("Monday September 17", 20, 21)
df <- as.data.frame(rbind(
# September 6 -----------------------------
c("[1. Introduction to EPIB607](https://docs.google.com/presentation/d/15c0YIS2KJXFzTKgFfQ_xDjTAcvPyQb8JhSLGvsEHJ6o/edit?usp=sharing)"),
c( "[2. Course Website](https://sahirbhatnagar.com/EPIB607/)"),
c( "[3. Teaching Philosophy](https://sahirbhatnagar.com/EPIB607/course-information.html#teaching-strategy)"),
c( "[4. Video: What is Statistics?](https://www.learner.org/courses/againstallodds/unitpages/unit01.html)"),
c( "[5. Introduction to DALITE](https://mydalite.org/en/live/signup/form/NTc4)"),
c( "[6. Review of A1 and DALITE Q1](https://sahirbhatnagar.com/EPIB607/assignments.html)"),
c( "[7. Live Poll](http://etc.ch/tfZA)"),
c( "[8. Terms and Concepts group exercise](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
c( " "),
# September 10 -----------------
c( "[1. McGill VPN](http://kb.mcgill.ca/kb/?ArticleId=1212&source=article&c=12&cid=2#tab:homeTab:crumb:8:artId:1212:src:article)"),
c( "[2. Terms and Concepts Review](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
# c( "[3. Live Poll Review](http://etc.ch/tfZA)"),
c( "[3. R Markdown Presentation](https://prezi.com/dvmgx17e_was/reproducible/?utm_campaign=share&utm_medium=copy)"),
c(" [4. Introduction to the `mosaic` package](https://cran.r-project.org/package=mosaic)"),
c( " "),
# September 12 -----------------
c("[1. DALITE Q1 due by 5pm](https://github.com/sahirbhatnagar/EPIB607/raw/master/dalite/001_hist_mean/001-hist-mean.pdf)"),
c( " "),
# September 13 -----------------
c("1. Boxplots, Histograms, Means, Medians, Standard Deviations"),
c( " "),
# September 17 -----------------
c("1. gsdg"),
c(" ")
))
df %>% kable(col.names = c("Agenda")) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
group_rows("Thursday September 6", 1, 8) %>%
group_rows("Monday September 10", 10, 13) %>%
group_rows("Wednesday September 12", 15, 16) %>%
group_rows("Thursday September 13", 17, 19) %>%
group_rows("Monday September 17", 20, 21)
df <- as.data.frame(rbind(
c( "[1. McGill VPN](http://kb.mcgill.ca/kb/?ArticleId=1212&source=article&c=12&cid=2#tab:homeTab:crumb:8:artId:1212:src:article)"),
#c( "[2. Terms and Concepts Review](https://sahirbhatnagar.com/EPIB607/terms-and-concepts.html)"),
# c( "[3. Live Poll Review](http://etc.ch/tfZA)"),
c(" [2.1 Data graphics Slides](https://docs.google.com/presentation/d/1wXgcTzcRKl_leGRfNZjWWPkjwJSTlZSXBCl-fFuLEaE/edit?usp=sharing)"),
c("[2.2 Data graphics exercise](https://sahirbhatnagar.com/EPIB607/data-graphics.html)"),
c("[3. Introduction to the `mosaic` package](https://cran.r-project.org/package=mosaic) "),
c("[4. R Markdown Presentation](https://prezi.com/dvmgx17e_was/reproducible/?utm_campaign=share&utm_medium=copy)")
))
df %>% kable(col.names = NULL) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
library(RColorBrewer)
RColorBrewer::display.brewer.all()
RColorBrewer::brewer.pal(n = 9, "Blues")
plot(1:9, col = RColorBrewer::brewer.pal(n = 9, "Blues"))
plot(1:9, pch = 19,
col = RColorBrewer::brewer.pal(n = 9, "Blues"))
sample(1:9, 1)
plot(1:9, pch = 19,
sample(1:9, 1)
plot(1:9, pch = 19,
col = RColorBrewer::brewer.pal(n = 9, "Blues"))
pacman::p_load('clauswilke/dviz.supp')
pacman::p_load_gh('clauswilke/dviz.supp')
devtools::install_github('clauswilke/dviz.supp')
pacman::p_load_gh('clauswilke/dviz.supp',auth_token = NULL)
pacman::p_load_gh('clauswilke/dviz.supp',auth_token = NA)
pacman::p_load_gh('clauswilke/dviz.supp',auth_token = NULL)
devtools::p_load_gh('clauswilke/dviz.supp',auth_token = NULL)
devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
.libPaths()
libr
library(bookdown)
.libPaths()
library(bookdown)
pacman::p_install(yaml)
# run setup script
# source("_common.R")
options(dplyr.print_min = 6, dplyr.print_max = 6)
pacman::p_load_gh('clauswilke/dviz.supp')
pacman::p_install(digest)
pacman::p_load_gh('clauswilke/dviz.supp')
pacman::p_load_gh('clauswilke/dviz.supp',auth_token = NULL)
devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
pacman::p_install(curl)
devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
pacman::p_install(scales)
pacman::p_install(Rcpp, scales)
pacman::p_install(Rcpp)
pacman::p_install(scales)
pacman::p_install(colorspace)
pacman::p_install(scales)
devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
pacman::p_version("colorspace")
pacman::p_delete(colorspace)
install.packages("colorspace", repos = "http://R-Forge.R-project.org")
devtools::install_github("wilkelab/cowplot")
pacman::p_install(lazyeval)
devtools::install_github("wilkelab/cowplot")
pacman::p_install(plyr)
devtools::install_github("wilkelab/cowplot")
pacman::p_install(rlang)
devtools::install_github("wilkelab/cowplot")
pacman::p_install(tibble)
devtools::install_github("wilkelab/cowplot")
devtools::install_github("clauswilke/colorblindr")
pacman::p_load_gh('clauswilke/dviz.supp',auth_token = NULL)
pacman::p_install(dplyr)
pacman::p_install("bindrcpp")
pacman::p_install(dplyr)
pacman::p_install(glue)
pacman::p_install(dplyr)
install.packages("dplyr", lib = .libPaths()[1], dependencies = TRUE)
pacman::p_load(dplyr)
pacman::p_install("tidyselect")
pacman::p_install("purrr")
pacman::p_install("tidyselect")
pacman::p_load(dplyr)
devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
library(forcats)
library(patchwork)
library(lubridate)
pacman::p_load(lubridate)
pacman::p_load(stringi)
pacman::p_load(lubridate)
devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
library(patchwork)
library(lubridate)
aes_pos <- ggdraw() +
geom_segment(data = data.frame(x = c(0, 0.5),
xend = c(1, 0.5),
y = c(0.5, 0),
yend = c(0.5, 1)),
aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = grid::unit(12, "pt")), size = .75) +
draw_text("y", .5, 1, size = 12, vjust = 1, hjust = 2.5, family = dviz_font_family) +
draw_text("x", 1, .5, size = 12, vjust = 2, hjust = 1, family = dviz_font_family) +
coord_cartesian(xlim = c(-.2, 1.2), ylim = c(-.2, 1.2))
library(dviz.supp)
aes_pos <- ggdraw() +
geom_segment(data = data.frame(x = c(0, 0.5),
xend = c(1, 0.5),
y = c(0.5, 0),
yend = c(0.5, 1)),
aes(x = x, y = y, xend = xend, yend = yend),
arrow = arrow(length = grid::unit(12, "pt")), size = .75) +
draw_text("y", .5, 1, size = 12, vjust = 1, hjust = 2.5, family = dviz_font_family) +
draw_text("x", 1, .5, size = 12, vjust = 2, hjust = 1, family = dviz_font_family) +
coord_cartesian(xlim = c(-.2, 1.2), ylim = c(-.2, 1.2))
aes_color <- ggdraw() +
geom_tile(data = data.frame(x = 0.15 + .2333*(0:3)),
aes(x, y = .5, fill = factor(x)), width = .2, height = .6) +
scale_fill_OkabeIto(guide = "none")
aes_shape <- ggdraw() +
geom_point(data = data.frame(x = (.5 + 0:3)/4),
aes(x, y = .5, shape = factor(x)), size = 8, fill = "grey80") +
scale_shape_manual(values = 21:24)
aes_size <- ggdraw() +
geom_point(data = data.frame(x = (.5 + 0:3)/4),
aes(x, y = .5, size = factor(x)), shape = 21, fill = "grey80") +
scale_size_manual(values = c(2, 5, 8, 11))
aes_lwd <- ggdraw() +
geom_segment(data = data.frame(x = rep(0.05, 4),
xend = rep(0.95, 4),
y = (1.5 + 0:3)/6,
yend = (1.5 + 0:3)/6,
size = 4:1),
aes(x = x, y = y, xend = xend, yend = yend, size = size)) +
scale_size_identity()
aes_ltp <- ggdraw() +
geom_segment(data = data.frame(x = rep(0.05, 4),
xend = rep(0.95, 4),
y = (1.5 + 0:3)/6,
yend = (1.5 + 0:3)/6,
linetype = 4:1),
aes(x = x, y = y, xend = xend, yend = yend, linetype = linetype), size = 1) +
scale_linetype_identity()
plot_grid(aes_pos, aes_shape, aes_size,
aes_color, aes_lwd, aes_ltp,
ncol = 3,
labels = c("position", "shape", "size", "color", "line width", "line type"),
label_x = 0.05, label_y = 0.95, hjust = 0, vjust = 1)
pacman::p_install(bookdown)
pacman::p_install(knitr)
pacman::p_install(rmarkdown)
pacman::p_install("htmltools")
pacman::p_install(rmarkdown)
install.packages("rmarkdown", lib = .libPaths()[1], dependencies = TRUE)
pacman::p_install(zoo)
pacman::p_install("lattice")
pacman::p_install(zoo)
install.packages("rmarkdown", lib = .libPaths()[1], dependencies = TRUE)
pacman::p_install(backports)
install.packages("rmarkdown", lib = .libPaths()[1], dependencies = TRUE)
pacman::p_install(nlme)
pacman::p_install(tidyverse)
pacman::p_install(tidyr)
pacman::p_install(tidyverse)
install.packages("tidyverse", lib = .libPaths()[1], dependencies = TRUE)
install.packages("haven", lib = .libPaths()[1], dependencies = TRUE)
.libPaths()
install.packages("jsonlite", lib = .libPaths()[1], dependencies = TRUE)
library(tidyverse)
install.packages("readr", lib = .libPaths()[1], dependencies = TRUE)
library(bookdown)
install.packages("bookdown", lib = .libPaths()[1], dependencies = TRUE)
install.packages("pacman", lib = .libPaths()[1], dependencies = TRUE)
pacman::p_load(tidyverse)
pacman::p_load(readxl)
pacman::p_load(tidyverse)
pacman::p_load(xml2)
pacman::p_load(tidyverse)
install.packages("data.table", lib = .libPaths()[1], dependencies = TRUE)
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
pacman::p_load(char = needed_CRAN_pkgs)
install.packages("pillar")
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
pacman::p_load(char = needed_CRAN_pkgs)
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
install.packages(needed_CRAN_pkgs)
install.packages(needed_CRAN_pkgs, dependencies = TRUE)
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
install.packages(needed_CRAN_pkgs, dependencies = TRUE)
install.packages( "udunits2", dependencies = TRUE)
install.packages( "udunits2", dependencies = TRUE, configure.args = '--with-udunits2-lib=/usr/local/lib')
devtools::install_github("r-quantities/units", args='--configure-args="--with-udunits2-lib=/opt/lib --with-udunits2-include=/opt/include"')
install.packages( "udunits2", dependencies = TRUE)
install.packages(needed_CRAN_pkgs, dependencies = TRUE)
install.packages(c("munsell","fpc"))
install.packages(c("cluster","fpc"))
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
install.packages(needed_CRAN_pkgs, dependencies = TRUE)
install.packages("bindr")
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
pacman::p_install(char = needed_CRAN_pkgs)
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
install.packages(needed_CRAN_pkgs, dependencies = TRUE)
install.packages("foreign")
install.packages("cellranger")
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
pacman::p_load(char = needed_CRAN_pkgs)
install.packages("Matrix")
# CRAN packages needed
needed_CRAN_pkgs <- c(
# Data packages:
# "nycflights13", "ggplot2movies", "fivethirtyeight", "gapminder", "ISLR",
# Explicitly used packages:
"tidyverse", "rmarkdown", "knitr", "mosaic", "mosaicData", "RColorBrewer",
"plotly", "janitor", "skimr","kableExtra",
# "infer", "moderndive",
# Internally used packages:
"webshot"#, "tufte", "mvtnorm", "remotes", "devtools", "dygraphs", "gridExtra"
)
pacman::p_load(char = needed_CRAN_pkgs)
pacman::p_load(mdsr)
devtools::install_github("thomasp85/patchwork")
pacman::p_load(forcats)
pacman::p_load(patchwork)
pacman::p_load(lubridate)
# pacman::p_load_gh('clauswilke/dviz.supp',auth_token = NULL)
# devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
install.packages("labelling")
# pacman::p_load_gh('clauswilke/dviz.supp',auth_token = NULL)
# devtools::install_github('clauswilke/dviz.supp',auth_token = NULL)
install.packages("labeling")
pacman::p_load(pinp)
read.table("~/git_repositories/epib607/data/age_sex_frequencies_ireland.txt")
read.table("~/git_repositories/epib607/data/age_sex_frequencies_ireland.txt", header = TRUE)
dat <- read.table("~/git_repositories/epib607/data/age_sex_frequencies_ireland.txt", header = TRUE)
library(dplyr)
dat %>% mutate(Male = case_when(Male == 1 ~ "Male", Male == 0, "Female"))
dat %>% mutate(Male = case_when(Male == 1 ~ "Male", Male == 0 ~ "Female"))
dat <- dat %>% mutate(Male = case_when(Male == 1 ~ "Male", Male == 0 ~ "Female"))
str(dat)
pacman::p_load(manipulate)
mosaic::mPlot(dat)
mosaicplot(dat)
mosaic::mplot(dat)
pacman::p_load(ggformula)
gf_bar()
head(dat)
gf_bar(Age ~ Freq, data = dat)
gf_bar(Freq ~ Age, data = dat)
str(dat)
gf_bar(Age ~ Freq, data = dat)
gf_bar(Age ~ Freq, data = dat, stat = "identity")
gf_bar(Freq ~ Age, data = dat, stat = "identity")
gf_bar(Freq ~ Age, data = dat, stat = "identity", color = ~ Male)
gf_bar(Freq ~ Age, data = dat, stat = "identity", fill = ~ Male)
gf_bar(Freq ~ Age, data = dat, stat = "identity", fill = ~ Male, position = "dodge")
gf_bar(Freq ~ Age | Male, data = dat, stat = "identity")
gf_bar(Freq ~ Age | Male, data = dat, stat = "identity", fill = ~ Male)
colnames(dat)
mosaic::mPlot(dat, "histogram")
colnames(dat) <- c("Gender", "Age", "Freq")
write.csv(dat, file = "../../data/age_sex_frequencies_ireland.csv", quote = FALSE, row.names = FALSE)
write.csv(dat, file = "data/age_sex_frequencies_ireland.csv", quote = FALSE, row.names = FALSE)
pacman::p_info(mosaic)
library(mosaic)
learnr::run_tutorial("refining", package = "ggformula")
install.packages("learnr", dependencies = TRUE)
learnr::run_tutorial("refining", package = "ggformula")
library(rmarkdown)
draft("mypaper.Rmd", template="pdf", package="pinp", edit=TRUE)
pacman::p_delete(colorspace)
install.packages("colorspace", repos = "http://R-Forge.R-project.org")
irish_census <- read.csv("https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age_sex_frequencies_ireland.csv")
irish_census$Gender
irish_census <- read.csv("https://github.com/
sahirbhatnagar/EPIB607/
raw/master/data/
age_sex_frequencies_ireland.csv")
irish_census <- read.csv("https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age_sex_frequencies_ireland.csv")
head(irish_census)
head(irish_census[sample(1:nrow(irish_census), size = 10)], n = 10)
head(irish_census[sample(1:nrow(irish_census), size = 10),], n = 10)
set.seed(123)
head(irish_census[sample(1:nrow(irish_census), size = 10),], n = 10)
head(irish_census, n = 10)
pacman::p_load(datapasta)
