y0 = 1:nrow(dt), lend = 1)
legend("topleft",
legend = c(sprintf("+/- CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",QNORM[1], QNORM[2])),
lty = c(1,1,1),
col = c("red","black","orange"), lwd = 4)
}
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(28,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 1.5)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1)
legend("topleft",
legend = c(sprintf("+/- CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",QNORM[1], QNORM[2])),
lty = c(1,1,1),
col = c("red","black","orange"), lwd = 4)
}
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(28,40), BOOT = c(31, 38))
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 2.5)
compare_CI <- function(ybar, PM, QNORM, BOOT, col = c("red","black","orange")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 1.5)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 2.5)
legend("topleft",
legend = c(sprintf("+/- CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",QNORM[1], QNORM[2])),
lty = c(1,1,1),
col = col, lwd = 4)
}
compare_CI <- function(ybar, PM, QNORM, BOOT, col = c("red","black","orange")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 1.5)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 2.5)
legend("topleft",
legend = c(sprintf("+/- CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",QNORM[1], QNORM[2])),
lty = c(1,1,1),
col = col, lwd = 4)
}
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(28,40), BOOT = c(31, 38))
RColorBrewer::brewer.pal(9, "Set1")
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 1.5)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 2.5)
legend("topleft",
legend = c(sprintf("+/- CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",QNORM[1], QNORM[2])),
lty = c(1,1,1),
col = col, lwd = 4)
}
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(28,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 1.5)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 2.5)
legend("topleft",
legend = c(sprintf("+/- CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1,1,1),
col = col, lwd = 4)
}
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(28,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 1.5)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(sprintf("+/- CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1,1,1),
col = col, lwd = 4)
}
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 1.5)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1,1,1),
col = col, lwd = 4)
}
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(28,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "red", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1,1,1),
col = col, lwd = 4)
}
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(28,40), BOOT = c(31, 38))
paste(expression(mu),"=",37)
c(expression(mu),"=",37)
legend("topleft",
legend = c(paste(expression(mu),"=",37),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(2, 1,1,1),
col = c("black",col), lwd = 4)
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(paste(expression(mu),"=",37),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(2, 1,1,1),
col = c("black",col), lwd = 4)
}
# example of how to use the function:
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(25,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(paste(expression(mu),"=",37),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
# example of how to use the function:
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(25,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(expression(mu~=~37),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(expression(mu ~ = ~ 37),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(expression(mu  =  37),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
# example of how to use the function:
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(25,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(expression(mu),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
# example of how to use the function:
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(25,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(expression(mu "=37"),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(expression(*mu* "=37"),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
latex2exp::TeX("$\\mu=37$")
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(expression(`$\mu=37$` = paste("", "", mu = 37, , , , "")),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
latex2exp::TeX("$\mu=37$")
latex2exp::TeX("$\\mu=37$")
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(eval(substitute( expression(paste(mu,"=",37)))),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
# example of how to use the function:
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(25,40), BOOT = c(31, 38))
compare_CI <- function(ybar, PM, QNORM, BOOT,
col = c("#E41A1C","#377EB8","#4DAF4A")) {
dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
ybar = rep(ybar, 3),
low = c(PM[1], QNORM[1], BOOT[1]),
up = c(PM[2], QNORM[2], BOOT[2])
)
plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
xlim = range(pretty(c(dt$low, dt$up))),
xlab = 'Depth of ocean (m)', ylab = 'Confidence Interval Type',
las = 1, cex.axis = 0.8, cex = 3)
abline(v = 37, lty = 2, col = "black", lwd = 2)
segments(x0 = dt$low, x1 = dt$up,
y0 = 1:nrow(dt), lend = 1,
col = col, lwd = 4)
legend("topleft",
legend = c(eval(substitute( expression(paste(mu," = ",37)))),
sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
lty = c(1, 1,1,1),
col = c("black",col), lwd = 4)
}
# example of how to use the function:
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(25,40), BOOT = c(31, 38))
# a markdown link in the first row first column will cause an error for compiling
# pdf
knitr::kable(as.data.frame(rbind(
c("1","[Setting up the computing environment](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a1/a1-setup.pdf)","--","--","September 20, 2018"),
c("2","[Histograms, Means, Medians, Boxplots, Standard Deviation](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a2/a2-hist-mean-median.pdf)",
"[a2_template.Rmd](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a2/a2_template.Rmd)","[[1. 1911 Census of Dublin, Ireland]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age_sex_frequencies_ireland.csv)
[[2. Bone mineral loss]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/boneloss.csv)
[[3. Cancer rate 1930-2014, Males]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age-adjusted-cancer-death-rates-males-1930-2014.xlsx)
[[4. Cancer rate 1930-2014, Females]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age-adjusted-cancer-death-rates-females-1930-2014.xlsx) ","September 21, 2018"),
c("3","[Sampling Distributions](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a3/a3-sampling-dist.pdf)",
"[a3_template.Rmd](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a3/a3_template.Rmd)","","September 28, 2018"),
c("4","[CLT, Confidence Intervals and Bootstrap](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a4/a4_clt_ci.pdf)",
"[a4_template.Rmd](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a4/a4_template.Rmd)","October 5, 2018"),
c("5","Confidence Intervals","","","October 12, 2018"),
c("6","Tests of Significance and p-values","","","October 19, 2018"),
c("7","One-Sample Inference","","","November 2, 2018"),
c("8","Two-Sample Inference","","","November 9, 2018"),
c("9","Regression","","","November 16, 2018"),
c("10","Nonparametric Statistics","","","November 23, 2018")
)),
col.names = c("Assignment","Topic","Template","Data","Due"),
booktabs = TRUE)
# a markdown link in the first row first column will cause an error for compiling
# pdf
knitr::kable(as.data.frame(rbind(
c("1","[Setting up the computing environment](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a1/a1-setup.pdf)","--","--","September 20, 2018"),
c("2","[Histograms, Means, Medians, Boxplots, Standard Deviation](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a2/a2-hist-mean-median.pdf)",
"[a2_template.Rmd](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a2/a2_template.Rmd)","[[1. 1911 Census of Dublin, Ireland]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age_sex_frequencies_ireland.csv)
[[2. Bone mineral loss]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/boneloss.csv)
[[3. Cancer rate 1930-2014, Males]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age-adjusted-cancer-death-rates-males-1930-2014.xlsx)
[[4. Cancer rate 1930-2014, Females]](https://github.com/sahirbhatnagar/EPIB607/raw/master/data/age-adjusted-cancer-death-rates-females-1930-2014.xlsx) ","September 21, 2018"),
c("3","[Sampling Distributions](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a3/a3-sampling-dist.pdf)",
"[a3_template.Rmd](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a3/a3_template.Rmd)","","September 28, 2018"),
c("4","[CLT, Confidence Intervals and Bootstrap](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a4/a4_clt_ci.pdf)",
"[a4_template.Rmd](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a4/a4_template.Rmd)","","October 5, 2018"),
c("5","Confidence Intervals","","","October 12, 2018"),
c("6","Tests of Significance and p-values","","","October 19, 2018"),
c("7","One-Sample Inference","","","November 2, 2018"),
c("8","Two-Sample Inference","","","November 9, 2018"),
c("9","Regression","","","November 16, 2018"),
c("10","Nonparametric Statistics","","","November 23, 2018")
)),
col.names = c("Assignment","Topic","Template","Data","Due"),
booktabs = TRUE)
