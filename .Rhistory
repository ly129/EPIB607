str(ds)
ds$propn = round(ds$n.hivpos/ds$n.pairs,3)
round(sum(ds$n.hivpos)/sum(ds$n.pairs),3)
# devtools::install_github('droglenc/NCStats')
library(NCStats)
fit0=glm(cbind(n.hivpos,ds$n.hivneg) ~ 1,
family=binomial, data=ds)
summary(fit0)
logistic.regression.or.ci <- function(regress.out, level=0.95){
################################################################
#                                                              #
#  This function takes the output from a glm                   #
#  (logistic model) command in R and provides not              #
#  only the usual output from the summary command, but         #
#  adds confidence intervals for all coefficients and OR's.    #
#                                                              #
#  This version accommodates multiple regression parameters    #
#                                                              #
################################################################
usual.output <- summary(regress.out)
z.quantile <- qnorm(1-(1-level)/2)
number.vars <- length(regress.out$coefficients)
OR <- exp(regress.out$coefficients[-1])
temp.store.result <- matrix(rep(NA, number.vars*2), nrow=number.vars)
for(i in 1:number.vars)
{
temp.store.result[i,] <- summary(regress.out)$coefficients[i] +
c(-1, 1) * z.quantile * summary(regress.out)$coefficients[i+number.vars]
}
intercept.ci <- temp.store.result[1,]
slopes.ci <- temp.store.result[-1,]
OR.ci <- exp(slopes.ci)
output <- list(regression.table = usual.output, intercept.ci = intercept.ci,
slopes.ci = slopes.ci, OR=OR, OR.ci = OR.ci)
return(output)
}
summary(fit0)
plogis(fit0$coefficients)
round(cbind(ds$propn,fit0$fitted.values) ,3)
( n.s=aggregate(ds$n.pairs,
by=list(caesarian=ds$caesarian),sum) )
( pos=aggregate(ds$n.hivpos,
by=list(caesarian=ds$caesarian),sum) )
( neg=aggregate(ds$n.hivneg,
by=list(caesarian=ds$caesarian),sum) )
( or = round(pos$x[2]/neg$x[2]/(pos$x[1]/neg$x[1]),2))
( rr = round((pos$x[2]/n.s$x[2]) / (pos$x[1]/n.s$x[1]),2) )
round(
ds.for.mh$HIV.pos.indexCat * ds.for.mh$HIV.neg.refCat /
(ds.for.mh$HIV.neg.indexCat * ds.for.mh$HIV.pos.refCat ),2)
round(
(ds.for.mh$HIV.pos.indexCat / ds.for.mh$n.index) /
(ds.for.mh$HIV.pos.refCat / ds.for.mh$n.ref ),2)
mean(
(ds.for.mh$HIV.pos.indexCat / ds.for.mh$n.index) /
(ds.for.mh$HIV.pos.refCat / ds.for.mh$n.ref )
)
(30/372)/(652/3850)
(ds.for.mh$HIV.pos.indexCat / ds.for.mh$n.index) /
(ds.for.mh$HIV.pos.refCat / ds.for.mh$n.ref )
( mh.num = sum(ds.for.mh$HIV.pos.indexCat *
ds.for.mh$n.ref / ds.for.mh$n) )
( mh.den = sum(ds.for.mh$HIV.pos.refCat *
ds.for.mh$n.index / ds.for.mh$n) )
round(mh.num / mh.den, 2)
sum(ds.for.mh$HIV.pos.indexCat *
ds.for.mh$n.ref / ds.for.mh$n)
( mh.den = sum(ds.for.mh$HIV.pos.refCat *
ds.for.mh$n.index / ds.for.mh$n) )
round(mh.num / mh.den, 2)
mh.num / mh.den
exp(-1.671)
exp(-1.671-0.815)
exp(-0.815)
plogis(-1.6-.815)
1.220832 + 0.003012 + log(37922)
exp(1.220832 + 0.003012 + log(37922))
cases <- c(514230, 140312)
PT <- c(151690, 37922)
not_breastfed <- c(0, 1)
fit <- glm(cases ~ -1 + PT + PT:not_breastfed, family = poisson(link = identity))
summary(fit)
fit <- glm(cases ~ not_breastfed + offset(log(PT)), family = poisson(link = log))
summary(fit)
fit$fitted.values
coef(fit)
sum(coef(fit)) + log(PT[2])
exp(sum(coef(fit)) + log(PT[2]))
pnorm(1.517, lower.tail = F)*2
# Bednets <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/2018 Fall/TA/a9/Bednets.csv")
Bednets <- read.csv("~/git_repositories/epib607/assignments/a9/Bednets.csv")
Bednets
# Denmark <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/2018 Fall/TA/a9/Denmark.csv")
Denmark <- read.csv("~/git_repositories/epib607/assignments/a9/Denmark.csv")
Denmark
fit1 <- glm(formula = Cases ~ Exposure + offset(log(Person.time)), family = poisson(link = log), data = Bednets)
summary(fit1)
coef(fit1)[2]
# Calculating the rate ratio
rate.ratio <- round(exp(coef(fit1)[2]), 2)
rate.ratio
sqrt(vcov(fit1)[2,2])
exp(coef(fit1)[2] + qnorm(c(0.025,0.975)) * sqrt(vcov(fit1)[2,2]))
round(exp(coef(fit1)[2] + qnorm(c(0.025,0.975)) * sqrt(vcov(fit1)[2,2])), 2)
# Calculate 95% CI
CI.rr <- round(exp(coef(fit1)[2] + qnorm(c(0.025,0.975)) * sqrt(vcov(fit1)[2,2])), 2)
CI.rr
Bednets
cases <- c(1691, 2047)
exposure <- c(0,1)
PT <- c(844, 1351)
summary(glm(cases ~ exposure + offset(log(PT)), family = poisson(link = log)))
Bednets
aggregate(Bednets$Cases, list(Bednets$Exposure),sum)
aggregate(Bednets$Person.time, list(Bednets$Exposure),sum)
cases <- aggregate(Bednets$Cases, list(Bednets$Exposure),sum)$x
cases
# Since there are no determinants, we only need the totals
cases <- aggregate(Bednets$Cases, list(Bednets$Exposure),sum)$x
PT <- aggregate(Bednets$Person.time, list(Bednets$Exposure),sum)$x
exposure <- c(0,1)
summary(glm(cases ~ exposure + offset(log(PT)), family = poisson(link = log)))
fit1$df.residual
nrow(Bednets)
coef(fit1)
length(coef(fit1))
# Perform regression to get rate difference
fit2 <- glm(Cases ~ -1 + Person.time + Person.time:Exposure, family = poisson(link = identity), data = Bednets)
summary(fit2)
sqrt(vcov(fit2)[3,3])
sqrt(vcov(fit2)[2,2])
CI.95.rate.diff <- round(qnorm(p = c(0.025, 0.975), mean = coef(fit2)[2], sd = sqrt(vcov(fit2)[2,2])), 2)
CI.95.rate.diff
Bednets$Rate <- Bednets$Cases/Bednets$Person.time
# (1) Splitting the data frame into exposed and unexposed
Treatment.0 <- Bednets[which(Bednets$Exposure == 0),]
Treatment.1 <- Bednets[which(Bednets$Exposure == 1),]
# (2) Calculating sum of the cases for each treatment group
sum.cases.0 <- sum(Treatment.0$Cases)
sum.cases.1 <- sum(Treatment.1$Cases)
# (3) Calculating sum of the person-time for each treatment group
sum.pt.0 <- sum(Treatment.0$Person.time)
sum.pt.1 <- sum(Treatment.1$Person.time)
# (4) Calculating the incidence rate for each treatment group
rate.treatment.0 <- sum.cases.0/sum.pt.0
rate.treatment.1 <- sum.cases.1/sum.pt.1
# (5) Calculating the rate difference
rate.difference <- rate.treatment.1 - rate.treatment.0
rate.difference
fit3 <- glm(Deaths ~ Year.2000 + Year.2005 + Age.75 + Age.80 + Age.85 + Male + offset(log(PT)), family = poisson(link = log), data = Denmark)
summary(fit3)
rate.reference <- round(exp(coef(fit3)[1]), 4)
RR.Y2000 <- round(exp(coef(fit3)[2]), 4)
RR.Y2005 <- round(exp(coef(fit3)[3]), 4)
RR.A75 <- round(exp(coef(fit3)[4]), 4)
RR.A80 <- round(exp(coef(fit3)[5]), 4)
RR.A85 <- round(exp(coef(fit3)[6]), 4)
RR.Male <- round(exp(coef(fit3)[7]), 4)
exp(coef(fit3))
nrow(Denmark)
nrow(Denmark) - length(coef(fit3))
Denmark$Exp.deaths <- exp(coef(fit3)[1])*(exp(coef(fit3)[2])^Denmark$Year.2000)*(exp(coef(fit3)[3])^Denmark$Year.2005)*(exp(coef(fit3)[4])^Denmark$Age.75)*(exp(coef(fit3)[5])^Denmark$Age.80)*(exp(coef(fit3)[6])^Denmark$Age.85)*(exp(coef(fit3)[7])^Denmark$Male)*Denmark$PT
x2.stat.2 <- sum((Denmark$Deaths - Denmark$Exp.deaths)^2/Denmark$Exp.deaths)
p.value.chi.2 <- pchisq(q = x2.stat.2, df = nrow(Denmark) - length(coef(fit3)), lower.tail = F)
p.value.chi.2
# devtools::install_github('droglenc/NCStats')
library(NCStats)
ds=read.csv("~/git_repositories/epib607/slides/regression/handouts/hiv_Transmission.csv",header=TRUE)
ds$n.hivneg= ds$n.pairs - ds$n.hivpos
ds$propn = round(ds$n.hivpos/ds$n.pairs,3)
#overall proportion hiv positive
#round(sum(ds$n.hivpos)/sum(ds$n.pairs),3)
# intercept-only logit model
fit0 <- glm(cbind(n.hivpos,n.hivneg) ~ 1, family=binomial(link=logit), data=ds)
print(summary(fit0), show.call=TRUE, digits=2)
fit.all4 = glm(cbind(n.hivpos,ds$n.hivneg) ~ caesarian + ART1or2 + ART3 + m.advancedHIV + c.LBW,
family=binomial(link=logit), data=ds)
print(summary(fit.all4), show.call=TRUE, digits=2)
coef(fit.all4)[c(1,2,4,5,6)]
exp(sum(coef(fit.all4)[c(1,2,4,5,6)]))
exp(sum(coef(fit.all4)[c(1,2,4,5,6)])) / (1+exp(sum(coef(fit.all4)[c(1,2,4,5,6)])))
fit.all4 = glm(cbind(n.hivpos,ds$n.hivneg) ~ caesarian + ART1or2 + ART3 + m.advancedHIV + c.LBW,
family=binomial(link=log), data=ds)
print(summary(fit.all4), show.call=TRUE, digits=2)
exp(sum(coef(fit.all4)[c(1,2,4,5,6)]))
139/582
230/732
369/1314
df <- read.csv("~/git_repositories/epib607/slides/regression/handouts/whickham.csv",
header = TRUE)
df
str(df)
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial)
summary(fit)
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial)
summary(fit)
exp(coef(fit))
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial(link=log))
summary(fit)
exp(coef(fit))
.24/.31
(139/582)/(230/732)
plogis(coef(fit))
plogis(sum(coef(fit)))
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial)
summary(fit)
exp(coef(fit))
plogis(sum(coef(fit)))
139/582
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial)
summary(fit)
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial)
summary(fit)
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial(link=log))
summary(fit)
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial(link=log))
summary(fit)
exp(coef(fit))
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial)
df
fit <- glm(cbind(dead, alive) ~ smoking + age25, data = df, family = binomial(link=log))
summary(fit)
fit <- glm(cbind(dead, alive) ~ smoking + age25 + age35, data = df, family = binomial(link=log))
summary(fit)
exp(coef(fit))
fit <- glm(cbind(dead, alive) ~ smoking + age25 + age35 + age45 + age55 , data = df, family = binomial(link=log))
summary(fit)
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial)
summary(fit)
fit <- glm(cbind(dead, alive) ~ smoking + age25 + age35 + age45 + age55 + age65, data = df, family = binomial(link=log))
summary(fit)
exp(coef(fit))
fit <- glm(cbind(dead, alive) ~ smoking + age25 + age35 + age45 + age55 + age65, data = df, family = binomial(link=log))
head(df)
df
fit <- glm(cbind(dead, alive) ~ smoking + age25 + age35 + age45 + age55 + age65 + age75, data = df, family = binomial(link=log))
summary(fit)
exp(coef(fit))
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial)
summary(fit)
exp(coef(fit))
plogis(sum(coef(fit)))
139/582
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial)
fit$fitted.values
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial)
summary(fit)
plogis(sum(coef(fit)))
139/582
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial)
summary(fit)
exp(coef(fit))
plogis(sum(coef(fit)))
139/582
fit$fitted.values
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial)
summary(fit)
exp(coef(fit))
plogis(sum(coef(fit)))
139/582
fit$fitted.values
table(fit$fitted.values)
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial)
summary(fit)
exp(coef(fit))
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial(link=logit))
summary(fit)
fit <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial(link=log))
summary(fit)
exp(coef(fit))
fit1 <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial(link=logit))
summary(fit1)
exp(coef(fit1))
plogis(sum(coef(fit1)))
139/582
fit2 <- glm(cbind(dead, alive) ~ smoking, data = df, family = binomial(link=log))
summary(fit2)
exp(coef(fit2))
plot(fit1$fitted.values, fit2$fitted.values)
table(fit1$fitted.values, fit2$fitted.values)
fit <- glm(cbind(dead, alive) ~ ., data = df, family = binomial(link=logit))
fit3 <- glm(cbind(dead, alive) ~ ., data = df, family = binomial(link=logit))
summary(fit3)
exp(coef(fit3))
fit3$fitted.values
curve(log(x/(1-x)), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
dev.off()
par(mfrow=c(1, 2))
curve(log(x/(1-x)), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
curve(log(x), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
rug(fit3$fitted.values)
dev.off()
par(mfrow=c(1, 2))
curve(log(x/(1-x)), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
rug(fit3$fitted.values)
curve(log(x), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
rug(fit3$fitted.values)
dev.off()
par(mfrow=c(1, 2))
curve(log(x/(1-x)), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
points(fit3$fitted.values, log(fit3$fitted.values / (1-fit3$fitted.values)))
points(fit3$fitted.values, log(fit3$fitted.values / (1-fit3$fitted.values)), pch = 19)
curve(log(x/(1-x)), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
points(fit3$fitted.values, log(fit3$fitted.values / (1-fit3$fitted.values)), pch = 19)
dev.off()
par(mfrow=c(1, 2))
curve(log(x/(1-x)), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
points(fit3$fitted.values, log(fit3$fitted.values / (1-fit3$fitted.values)), pch = 19)
dev.off()
par(mfrow=c(1, 2))
curve(log(x/(1-x)), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
points(fit3$fitted.values, log(fit3$fitted.values / (1-fit3$fitted.values)), pch = 19)
rug(fit3$fitted.values)
curve(log(x), from = range(fit3$fitted.values)[1], to = range(fit3$fitted.values)[2])
rug(fit3$fitted.values)
points(fit3$fitted.values, log(fit3$fitted.values), pch = 19)
plogis(5)
plogis(2)
exp(2) / (1 + exp(2))
1 / exp(-2)
1 / (1 + exp(-2))
plogis(-1.55)
1 / (1 + exp(1.55))
par(mfrow=c(1, 2))
curve(log(x/(1-x)), 0, 0.1)
curve(log(x), 0, 0.1)
par(mfrow=c(1, 2))
curve(log(x/(1-x)), 0, 1)
curve(log(x), 0, 1)
pacman::p_load_gh('sahirbhatnagar/sail')
google <- rnorm(100, mean = 100, sd = 10)
google
hist(google)
bing <- google + rnorm(100, mean = 5, sd = 20)
hist(bing)
plot(google, bing)
summary(lm(bing~google))
bing <- google + rnorm(100, mean = 5, sd = 10)
hist(bing)
plot(google, bing)
summary(lm(bing~google))
measures <- c(google, bing)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing <- google + rnorm(100, mean = 5, sd = 5)
hist(bing)
plot(google, bing)
summary(lm(bing~google))
measures <- c(google, bing)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
bing <- google + rnorm(100, mean = 5, sd = 10)
hist(bing)
plot(google, bing)
summary(lm(bing~google))
measures <- c(google, bing)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing <- google + rnorm(100, mean = 5, sd = 10)
hist(bing)
plot(google, bing)
summary(lm(bing~google))
measures <- c(google, bing)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing <- google + rnorm(100, mean = 5, sd = 20)
hist(bing)
plot(google, bing)
summary(lm(bing~google))
measures <- c(google, bing)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing <- google + rnorm(100)*2
hist(bing)
plot(google, bing)
summary(lm(bing~google))
measures <- c(google, bing)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
bing <- google + rnorm(100, mean = 1, sd = 10)
hist(bing)
plot(google, bing)
summary(lm(bing~google))
measures <- c(google, bing)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing.measures <- google + rnorm(100, mean = 1, sd = 10)
hist(bing.measures)
plot(google, bing.measures)
summary(lm(bing.measures~google))
measures <- c(google, bing.measures)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing.measures <- google + rnorm(100, mean = 1, sd = 10)
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing.measures <- google + rnorm(100, mean = 5, sd = 10)
hist(bing.measures)
plot(google, bing.measures)
summary(lm(bing.measures~google))
measures <- c(google, bing.measures)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing.measures <- google + rnorm(100, mean = 5, sd = 2)
hist(bing.measures)
plot(google, bing.measures)
summary(lm(bing.measures~google))
measures <- c(google, bing.measures)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing.measures <- google + rnorm(100, mean = 5, sd = 3)
hist(bing.measures)
plot(google, bing.measures)
summary(lm(bing.measures~google))
measures <- c(google, bing.measures)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
boxplot(measures ~ bing)
# assuming google is gold standard
google <- rnorm(100, mean = 100, sd = 10)
bing.measures <- google + rnorm(100, mean = 10, sd = 2)
hist(bing.measures)
plot(google, bing.measures)
summary(lm(bing.measures~google))
measures <- c(google, bing.measures)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
boxplot(measures ~ bing)
# assuming google is gold standard, i.e., measured without error
google <- rnorm(100, mean = 100, sd = 10)
plot(google, bing.measures)
# assuming google is gold standard, i.e., measured without error
# simulate 100 measures from a normal(100, 10) dist
google <- rnorm(100, mean = 100, sd = 10)
# bing.measures is a function of the google measures, with some added noise
bing.measures <- google + rnorm(100, mean = 10, sd = 2)
plot(google, bing.measures)
cor(google, bing.measures)
summary(lm(bing.measures~google))
# regression shows an adjusted R^2 greater than 0.95
summary(lm(bing.measures~google))
# however if we plot the measures, bing is higher than google:
boxplot(measures ~ bing)
# regression for the delta mu confirms this
# a significant difference between google measures and bing measures
measures <- c(google, bing.measures)
bing <- c(rep(0,100), rep(1, 100))
summary(lm(measures ~ bing))
setwd("~/git_repositories/epib607/assignments/a10")
Bednets <- read.csv("~/git_repositories/epib607/assignments/a10/Bednets.csv")
Bednets
7+5+10
7+5+10+15
4
4+3+5+3+1+2+2
(30/372) / (652/3850)
mode <- rep(c("Elective cesarean","Other"), 12)
ART <- c(rep("0", 8),rep("1 or 2",8),rep("3",8))
AMD <- rep(c("No","No","Yes","Yes"), 6)
LBW <- rep(c(rep("No",4),rep("Yes",4)),3)
ds <- read.csv("~/git_repositories/epib607/slides/regression/handouts/hiv_Transmission.csv",
header = TRUE)
ds$n.hivneg <- ds$n.pairs - ds$n.hivpos
ds$risk = round(ds$n.hivpos/ds$n.pairs,3)
library(kableExtra)
knitr::kable(as.data.frame(cbind(mode,ART,AMD,LBW, ds$n.pairs, ds$n.hivpos, ds$n.hivneg, ds$risk)),
col.names = c("Mode of Delivery","ART","Advanced Maternal Disease","Low Birth Weight",
"Mother-Child Pairs","HIV-1 Positive","HIV-1 Negative","Vertical Transmission"),
align = c('l', rep("c",7))) %>%
add_header_above(c(" " = 1, "Covariate" = 3, "Number of " = 3, "Probability of" = 1), line = F)
# devtools::install_github('droglenc/NCStats')
library(NCStats)
ds=read.csv("~/git_repositories/epib607/slides/regression/handouts/hiv_Transmission.csv",header=TRUE)
ds$n.hivneg= ds$n.pairs - ds$n.hivpos
ds$propn = round(ds$n.hivpos/ds$n.pairs,3)
fit.all4 = glm(cbind(n.hivpos,n.hivneg) ~ caesarian + ART1or2 + ART3 + m.advancedHIV + c.LBW,
family=binomial(link=logit), data=ds)
print(summary(fit.all4), show.call=TRUE, digits=2, signif.stars = FALSE)
fit.all4log = glm(cbind(n.hivpos,n.hivneg) ~ caesarian + ART1or2 + ART3 + m.advancedHIV + c.LBW,
family=binomial(link=log), data=ds)
print(summary(fit.all4log), show.call=TRUE, digits=2, signif.stars = FALSE)
cbind(fit.all4$fitted.values, fit.all4log$fitted.values)
round(cbind(fit.all4$fitted.values, fit.all4log$fitted.values),2)
round(cbind(fit.all4$fitted.values, fit.all4log$fitted.values),3)
# fit.all4log$fitted.values
# round(cbind(fit.all4$fitted.values, fit.all4log$fitted.values),3)
pilogit <- plogis(-1.608-0.852*ds$caesarian-0.362*ds$ART1or2-1.178*ds$ART3+0.535*ds$m.advancedHIV+0.581*ds$c.LBW)
pilogit
cbind(pilogit, fit.all4$fitted.values)
cbind(pilogit, fit.all4$fitted.values) %>% plot
round(pilogit, fit.all4$fitted.values, 2)
round(cbind(pilogit, fit.all4$fitted.values), 2)
pilog <- exp(-1.793-0.720*ds$caesarian-0.278*ds$ART1or2-1.016*ds$ART3+0.409*ds$m.advancedHIV+0.453*ds$c.LBW)
round(cbind(pilog, fit.all4log$fitted.values), 2)
round(cbind(pilogit, pilog), 2)
round(cbind(pilogit, pilog), 3)
