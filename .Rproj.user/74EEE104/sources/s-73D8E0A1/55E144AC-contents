---
title: Assignment 3 - Sampling Distributions. Due September 28, 11:59pm 2018
author:
  - name: EPIB607 - Inferential Statistics
    affiliation: a
#  - name: Second Author
#    affiliation: a,b
address:
  - code: a
    address: Fall 2018, McGill University
#  - code: b
#    address: Department of Neat Tricks, Whereever State University, Someplace, MC, 67890
lead_author_surname: Bhatnagar and Hanley
doi: "https://sahirbhatnagar.com/EPIB607/"
abstract: |
  Because the results of random samples include an element of chance, we can't guarantee that our inferences are correct. What we can guarantee is that our methods usually give correct answers. We will see that the reasoning of statistical inference rests on asking "How often would this method give a correct answer if I used it very many times ?" To be able to answer these questions we need to understand sampling distributions and the normal curve. In this assignment you will practice calculating quantiles and probablities from the Normal distribution. All graphs and calculations are to be completed in an R Markdown document using the provided template. You are free to choose any function from any package to complete the assignment. Concise answers will be rewarded. Be brief and to the point. Please submit both the compiled HTML report and the source file (.Rmd) to myCourses by September 28, 2018, 11:59pm. Both HTML and .Rmd files should be saved as 'IDnumber_LastName_FirstName_EPIB607_A3'. 
# Optional: Acknowledgements
#acknowledgements: |
#  [rticles](https://cran.r-project.org/package=rticles) package, and both packages rely on the
#  [PNAS LaTeX](http://www.pnas.org/site/authors/latex.xhtml) macros. Both these sources are
#  ([GPL-3](https://www.gnu.org/licenses/gpl-3.0.en.html) and
#  [LPPL (>= 1.3)](https://www.latex-project.org/lppl/)).
# Optional: One or more keywords
keywords:
  - Sampling distribution
  - Standard error
  - Normal distribution
  - Quantiles
  - Percentiles
  - Z-scores

papersize: letter
fontsize: 9pt
# Optional: Force one-column layout, default is two-column
one_column: true
# Optional: Enables lineno mode, but only if one_column mode is also true
#lineno: true
# Optional: Enable one-sided layout, default is two-sided
#one_sided: true
# Optional: Enable section numbering, default is unnumbered
numbersections: true
# Optional: Specify the depth of section number, default is 5
#secnumdepth: 5
# Optional: Skip inserting final break between acknowledgements, default is false
skip_final_break: true
# Optional: Bibliography 
bibliography: pinp
# Optional: Enable a 'Draft' watermark on the document
watermark: false
footer_contents: "Assignment 3 due Sepetember 28, 2018 by 11:59pm"
output: pinp::pinp
# Required: Vignette metadata for inclusion in a package.
vignette: >
  %\VignetteIndexEntry{YourPackage-vignetteentry}
  %\VignetteKeywords{YourPackage, r, anotherkeyword}
  %\VignettePackage{Due Sepetember 28, 2018}
  %\VignetteEngine{knitr::rmarkdown}
editor_options: 
  chunk_output_type: console
---

# Template {-}

The `.Rmd` template for Assignment 3 is available [here](https://github.com/sahirbhatnagar/EPIB607/raw/master/assignments/a3/a3_template.Rmd)

# The `mosaic` package (optional) {-}

The `mosaic` package provides a consistent and user-friendly interface for descriptive statistics, plots and inference. In particular you might find the `mosaic::xpnorm` and `mosaic::xqnorm` functions useful for this assignment. Have a look at the [slides on sampling distributions](https://github.com/sahirbhatnagar/EPIB607/raw/master/slides/sampling_dist/EPIB607_sampling_dist.pdf) for some examples on how to use these functions. Remeber to install the package:

```{r, eval=FALSE}
install.packages("mosaic", dependencies = TRUE)
```

Then you must load the library to access its functions:

```{r, eval=FALSE}
library(mosaic)
```



# In-line R code {-}

For this and future assignments you may find it useful to include calculations from `R` directly in your text. For example, in the following code chunk I calculate $P(Y < 2)$ where $Y \sim \mathcal{N}(0,1)$, and store the result in an object called `prob_less_2`:


````r
`r ''````{r}
prob_less_2 <- mosaic::xpnorm(2)

# round to 2 digits
prob_less_2 <- round(prob_less_2, 2)
```
````

To print this result verbatim in an inline R expression use `` `r
prob_less_2` `` in the text.

\vspace{0.1in}

You can also call the function directly without storing the result in a code chunk using `` `r
round(mosaic::xpnorm(2), 2)` `` 

A sample answer would be: The probability that $Y$ is less than 2 is `r round(mosaic::xpnorm(2), 2)`.



# Normal probability calculations

Using your method of choice, calculate the following probabilities assuming $Y$ is a standard normal distribution ($Y \sim \mathcal{N}(0,1)$):

  a) $P(Y < -1.80)$
  b) $P(Y > -1.80)$
  c) $P(Y \geq 1.60)$
  d) $P(-1.8 < Y \leq 1.6)$



# HDL cholesterol

  a. US women over the age of 19 have a mean (HDL) cholesterol measure of 55 mg/dL with a standard deviation of 15.5 mg/dL. Assume HDL follows a Normal distribution.
      i. What percent of women have low values of HDL, where low is defined to be 40 mg/dL or less?
      ii. HDL levels of 60 mg/dL or more are believed to be protective against heart disease. What percent of women have protective levels of HDL?
      iii. What proportion of women has HDL in the range of 40-60 mg/dL?
      iv. What proportion of women has HDL in the range of 35-65 mg/dL?


# Osteoporosis

Osteoporosis is a condition in which the bones become brittle due to loss of minerals. To diagnose osteoporosis, an elaborate apparatus measures bone mineral density (BMD). BMD is usually reported in standardized form. The standardization is based on a population of healthy young adults. The Wolrd Health Organization (WHO) criterion for osteoporosis is a BMD 2.5 or more standard deviations below the mean for young adults. BMD measurements in a population of people who are similar in age and sex roughly follow a standard normal distribution. 

  a. What percent of healthy young adults have osteoporosis?
  b. Woman aged 70 to 79 are, of course, not young adults. The mean BMD in this age is about -2 on the standard scale for young adults. Suppose that the standard deviation is the same for young adults. What percent of this older population has osteoporosis?
  c. Likewise, osteopenia is low BMD, defined by the WHO as a BMD between 1 and 2.5 standard deviations below the mean of young adults. What percent of healthy young adults have osteopenia?
  d. The mean BMD among women aged 70 to 79 is about -2 on the standard scale for young adults. Suppose that the standard deviation is the same as for young adults. What percent of this older population has osteopenia?


# How deep is the ocean?

This question is based on the [in-class Exercise](https://github.com/sahirbhatnagar/EPIB607/blob/master/exercises/water/students/260194225_water_exercise_epib607.pdf) on sampling distributions. 

  a. For your samples of $n=5$ and $n=20$ of depths of the ocean, calculate the
      i. sample mean ($\bar{y}$)
      ii. standard error of the sample mean ($SE_{\bar{y}}$)
  b. Calculate the 68\%, 95\% and 99\% confidence intervals (CI) for both samples of $n=5$ and $n=20$. You may use the following formulas to calculate the confidence intervals:
  
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
df <- as.data.frame(rbind(
c("68\\%", "$\\bar{y} \\pm 1 \\times SE_{\\bar{y}}$"),
c("95\\%", "$\\bar{y} \\pm 2 \\times SE_{\\bar{y}}$"),
c("99\\%", "$\\bar{y} \\pm 3 \\times SE_{\\bar{y}}$")
))

df %>% knitr::kable(col.names = c("CI", "Formula")) 
```
  
Here is some sample code to calculate the CI. Suppose that based on a sample of $n=20$, my $\bar{y} = 2900$ and $SE_{\bar{y}} = 20$. Then my confidence intervals are

```{r, echo = TRUE, eval = FALSE}
ybar <- 2900
SEybar <- 20
# 68% CI
ybar + c(-1,1) * SEybar
# 95% CI
ybar + c(-2,2) * SEybar
# 99% CI
ybar + c(-3,3) * SEybar
```

Note that I have provided this code in the template as well. Take a look at the template before starting these calculations.

  c. What do you notice about the size of the three intervals for a given sample size? 


<!-- 
We support several options via the YAML header

- Setting a DOI or URL footer, for example for the CRAN package URL,
  which is placed in the bottom-left footer of the title page and even pages;
- Setting a footer label, for example _YourPackage Vignette_ stating
  your package, which is placed in the bottom-right footer on odd
  pages;
- Setting a free-form author field used on the inside footer;
- Optional _Draft_ watermarking;



## References 

Here we differ from PNAS and suggest natbib. References will appear in
author-year form. Use `\citet{}`, `\citep{}`, etc as usual.

We default to the `jss.bst` style. To switch to a different bibliography
style, please use `biblio-style: style` in the YAML header.


## Inline R Code 

The PNAS sample included a fixed PNG image here, but this document prefers
to show the results and embedding of _R_ code. 

```{r figex, fig.width=3, fig.height=3, cache=TRUE, echo=TRUE, fig.cap="Narrow ggplot2 figure"}
library(ggplot2)
ggplot(mtcars, aes(wt, mpg)) +
    geom_point(size=3, aes(colour=factor(cyl))) +
    theme(legend.position="none")
```

Here we use a standard knitr bloc with explicit options for

- figure width and height (`fig.width`, `fig.height`), both set to three inches;
- whether the code is shown (`echo=TRUE`); and
- the caption (`fig.cap`) as shown above.


## Digital Figures 

Markdown, Pandoc and LaTeX support `.eps` and `.pdf` files.

Figures and Tables should be labelled and referenced in the standard way
using the `\label{}` and `\ref{}` commands.

The R examples above show how to insert a column-wide
figure. To insert a figure wider than one column, please use the
`\begin{figure*}...\end{figure*}` environment. 

One (roundabout) way of doing this is to _not_ actually plot a figure, but to
save it in a file as the following segment shows:

```{r densityPlot, echo=TRUE}
library(ggplot2)
p <- ggplot(data = midwest,
            mapping = aes(x = area,
                          fill = state,
                          color = state)) +
    geom_density(alpha = 0.3)
## save to file
suppressMessages(ggsave("densities.pdf", p))
```

This file is then included via standard LaTeX commands.

\begin{figure*}
  \begin{center}
    \includegraphics[width=0.66\textwidth, height=3.5in]{densities} 
  \end{center}
  \caption{Wide ggplot2 figure}\label{fig}
\end{figure*}


## Typeset Code (But Do Not Run It) 

We can also just show code.

```r
xx <- faithful[,"eruptions"]
fit <- density(xx)
plot(fit)
```

This simply used a pandoc bloc started and ended by three backticks,
with `r` as the language choice.  Similarly, _many_ other languages
can be typeset directly simply by relying on pandoc.


## Single column equations 

Authors may use 1- or 2-column equations in their article, according to
their preference.

To allow an equation to span both columns, options are to use the
`\begin{figure*}...\end{figure*}` environment mentioned above for
figures, or to use the `\begin{widetext}...\end{widetext}` environment
as shown in equation \ref{eqn:example} below.

Please note that this option may run into problems with floats and
footnotes, as mentioned in the [cuted package
documentation](http://texdoc.net/pkg/cuted). In the case of problems
with footnotes, it may be possible to correct the situation using
commands `\footnotemark` and `\footnotetext`.

\begin{equation}
  \begin{aligned}
(x+y)^3&=(x+y)(x+y)^2\\
       &=(x+y)(x^2+2xy+y^2) \\
       &=x^3+3x^2y+3xy^3+x^3. 
       \label{eqn:example} 
  \end{aligned}
\end{equation}


pandoc writes all tables using longtable, which fails in 2-column mode

  Species                    CBS     CV     G3
  ----------------------- ------ ------ ------
  1\. Acetaldehyde           0.0    0.0    0.0
  2\. Vinyl alcohol          9.1    9.6   13.5
  3\. Hydroxyethylidene     50.8   51.2   54.0

  : Comparison of the fitted potential energy surfaces and ab initio
  benchmark electronic energy calculations

-->

