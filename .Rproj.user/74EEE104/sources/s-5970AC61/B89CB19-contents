---
title: "Prediction of Growth Patterns from Tumor Lesion Characteristics"
author: "by Sahir Bhatnagar"
date: "`r Sys.Date()`"
output:
  html_document:
    toc: true
    toc_float: false
    number_sections: true
    toc_depth: 4
    keep_md: true
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.width = 11, fig.height = 8) 
```

```{r, echo=FALSE, results='hide', fig.keep='none'}
options(digits = 4, scipen = 2)
knitr::read_chunk("/home/sahir/Dropbox/consulting/gallix/jobtest/bin/data.R")
knitr::read_chunk("/home/sahir/Dropbox/consulting/gallix/jobtest/bin/packages.R")
knitr::read_chunk("/home/sahir/Dropbox/consulting/gallix/jobtest/bin/functions.R")

max_lesion_volume <- 50
lambda.type <- "lambda.min"
set.seed(1234)
```

```{r packages}
```

```{r defaults}
```

```{r functions}
```


```{r load-data}
```


# Overview

The following report contains a preliminary analysis of the prediction of growth pattern project. I will first go over the methodology and then present the results. 

<br>

# Reproducibility

This report is fully reproducible. That is, the results and plots in the report are dynamically produced based on the data. Therefore, should there be any changes or errors to correct in the raw data, we simply need to change the raw data file, and this report can be produced instantaneously; automatically reflecting the changes in the data. Furthermore, nothing has been copy-pasted into this report. The code and text are embedded together in an [R Markdown](http://rmarkdown.rstudio.com/) document.  

I was advised to filter out lesions below a certain total volume. I arbitrarily chose several thresholds and present those results. These thresholds can be easily modified, and the report can be re-produced effortlessly. Each section for the results is labeled by the corresponding threshold used.

<br>

# Methods

<br>

## Data Cleaning

The following steps were taken to arrive at the cleaned dataset used for analysis:  

1. Lesions with Total volume less than the pre-specified threshold were removed  
2. The Means were normalized by the `NORMF` factor provided in the data  
3. Columns related to the `Threshold Curvature Map` were removed from the analysis  
4. Columns related to the `BORDER ROI` and `INNER ROI` were kept for analysis as well as `Male` status. There were a total of `r length(border_names)+1` variables used all together for the border models and `r length(inner_names)+1` variables used all together for the inner models and shown in the tables below:  

```{r, results='asis'}
pander::pander(data.frame(`1`=c("Male",border_names)[1:9], `2`=c("Male",border_names)[10:18],
                          `3`=c("Male",border_names)[19:27], `4`=c("Male",border_names)[28:36],
                          `5`=border_names[37:45], `6`=c("Male",border_names)[46:54]), 
               col.names = c("","","","","",""))
```

```{r, results='asis'}
pander::pander(data.frame(`1`=c("Male",inner_names)[1:9], `2`=c("Male",inner_names)[10:18],
                          `3`=c("Male",inner_names)[19:27], `4`=c("Male",inner_names)[28:36],
                          `5`=inner_names[37:45], `6`=c("Male",inner_names)[46:54]), 
               col.names = c("","","","","",""))
```



5. **Training Data**: we only used the first observation for each patient for the training data. This choice was made because the model we used assumes independent observations. We would need a more complex model, such as a random effects model if we want to include several observations from the same patient to account for this extra variability.  
6. **Test Data**: all the observations not used in the training data were used for the test data. This could potentially mean that the same individual appears twice in our test data, in the event that they had at least 3 lesions.  
7. Patient #018 was removed from the analysis as they had an NA value for `SKE 18` and `KURT 18`. They had a Total Lesion Volume of 1.72 cm^3.  

<br>

## Model

We used a standard lasso logistic regression model. This choice was made because we have more predictor variables than observations, and therefore standard multivariable regression is not applicable. The lasso model performs simultaneous variable selection and estimation. The final result will be a compact list of predictors that are associated with the response (HGP status). The tuning parameter was selected using Leave-one-out cross-validation on the training set.  

**Updated March 21, 2018**  
Because the goal is to see the added predictive value of the Curvature Map and compare Border vs. Inner, we fit six models:  

1. Border: With curvature values (i.e. variables ending in the number 6)  
2. Border: Without curvature values  
3. Border: Curvature Values only  
4. Inner: With curvature values  
5. Inner: Without curvature values    
6. Inner: Curvature Values only  

I added discrimination plots and calibration plots.

**Updated March 30, 2018**  

1. I re-ran the analysis with version 3 of the data. There is no longer a `NORMF` factor  


**Updated March 30, 2018 NEW METHOD**  

1. I re-ran the analysis with version 3 of the data, using the Adaptive Lasso instead of just the regular Lasso. Briefly, the adaptive lasso applies weights to each predictor variable allowing for a differently penalty to be applied to each variable. In the regular lasso, each predictor is penalized equally. The weights are the inverse of the ridge regression coefficient estimates. Therefore a large coefficient estimate will lead to a small weight which means applying a small penalty to that variable. A small penalty, means its more likely to remain in the final model.

<br>

```{r QOL-indiv, eval=T}
QOL_by_question <- mapply(knitr::knit_expand, 
                          file = "/home/sahir/Dropbox/consulting/gallix/jobtest/report/desmo_template.Rmd", 
                          # j = seq(1,2, by = 0.1)
                          # j = rep(seq(1, 2, by = 0.25), each = 1),
                          j = 0,
                          # pen = rep(c("lasso","alasso","SCAD","MCP"),5)
                          pen = rep(c("lasso"), 1)
                          # j = 2
                          )
```


`r knitr::knit(text = unlist(QOL_by_question))` 




