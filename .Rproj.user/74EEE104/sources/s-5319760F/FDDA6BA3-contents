compare_CI <- function(ybar, PM, QNORM, BOOT,
                       col = c("#E41A1C","#377EB8","#4DAF4A")) {
  dt <- data.frame(type = c("plus_minus", "qnorm", "bootstrap"),
                   ybar = rep(ybar, 3),
                   low = c(PM[1], QNORM[1], BOOT[1]),
                   up = c(PM[2], QNORM[2], BOOT[2])
  )
  plot(dt$ybar, 1:nrow(dt), pch = 20, ylim = c(0, 5),
       xlim = range(pretty(c(dt$low, dt$up))),
       xlab = "Depth of ocean (m)", ylab = "Confidence Interval Type",
       las = 1, cex.axis = 0.8, cex = 3)
  abline(v = 37, lty = 2, col = "black", lwd = 2)
  segments(x0 = dt$low, x1 = dt$up,
           y0 = 1:nrow(dt), lend = 1,
           col = col, lwd = 4)
  legend("topleft",
         legend = c(eval(substitute( expression(paste(mu," = ",37)))),
                    sprintf("plus/minus CI: [%.f, %.f]",PM[1], PM[2]),
                    sprintf("qnorm CI: [%.f, %.f]",QNORM[1], QNORM[2]),
                    sprintf("bootstrap CI: [%.f, %.f]",BOOT[1], BOOT[2])),
         lty = c(1, 1,1,1),
         col = c("black",col), lwd = 4)
}



# example of how to use the function:
compare_CI(ybar = 36, PM = c(28, 40), QNORM = c(25,40), BOOT = c(31, 38))


reaction.times <- c(325,327,357,299,378)/1000
summary(reaction.times)
round(sd(reaction.times),3)
length(reaction.times)

n <- length(reaction.times)
SEM <- sd(reaction.times)/sqrt(n)
(SEM <- sd(reaction.times)/sqrt(n))
multiple.for.95pct <- stats::qt(p = c(0.025, 0.975), df = n-1)
(multiple.for.95pct <- stats::qt(p = c(0.025, 0.975), df = n-1))
by_hand_CI <- mean(reaction.times) + multiple.for.95pct * SEM
round(by_hand_CI, 3)

fit <- stats::lm(reaction.times ~ 1)
summary(fit)
stats::confint(fit)
qt(p = c(0.025, 0.975), df = 2*SEM / (SEM-1))

dt_ls <- function(x, df, mu, a) 1/a * dt((x - mu)/a, df)
pt_ls <- function(x, df, mu, a) pt((x - mu)/a, df)
qt_ls <- function(prob, df, mu, a) qt(prob, df)*a + mu
rt_ls <- function(n, df, mu, a) rt(n,df)*a + mu

qt()
qt_ls(prob = c(0.025, 0.975), df = n - 1, mu = mean(reaction.times), a = SEM)
